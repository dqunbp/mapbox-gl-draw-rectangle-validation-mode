{"version":3,"sources":["node_modules/@mapbox/mapbox-gl-draw/src/lib/mode_handler.js","node_modules/wgs84/index.js","node_modules/@mapbox/geojson-area/index.js","node_modules/@mapbox/mapbox-gl-draw/src/constants.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/sort_features.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/map_event_to_bounding_box.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/string_set.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/features_at.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/get_features_and_set_cursor.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/euclidean_distance.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/is_click.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/is_tap.js","node_modules/hat/index.js","node_modules/@mapbox/mapbox-gl-draw/src/feature_types/feature.js","node_modules/@mapbox/mapbox-gl-draw/src/feature_types/point.js","node_modules/@mapbox/mapbox-gl-draw/src/feature_types/line_string.js","node_modules/@mapbox/mapbox-gl-draw/src/feature_types/polygon.js","node_modules/@mapbox/mapbox-gl-draw/src/feature_types/multi_feature.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/mode_interface_accessors.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/mode_interface.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/object_to_mode.js","node_modules/@mapbox/mapbox-gl-draw/src/events.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/to_dense_array.js","node_modules/@mapbox/mapbox-gl-draw/src/render.js","node_modules/@mapbox/mapbox-gl-draw/src/store.js","node_modules/xtend/immutable.js","node_modules/@mapbox/mapbox-gl-draw/src/ui.js","node_modules/@mapbox/mapbox-gl-draw/src/setup.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/theme.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/common_selectors.js","node_modules/@mapbox/point-geometry/index.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/mouse_event_point.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/create_vertex.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/create_midpoint.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/create_supplementary_points.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/double_click_zoom.js","node_modules/@mapbox/geojson-normalize/index.js","../index.js","node_modules/@mapbox/geojson-coords/flatten.js","node_modules/@mapbox/geojson-coords/index.js","node_modules/traverse/index.js","node_modules/@mapbox/extent/index.js","node_modules/@mapbox/geojson-extent/index.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/constrain_feature_movement.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/move_features.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/simple_select.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/direct_select.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_point.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/is_event_at_coordinates.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_polygon.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_line_string.js","node_modules/@mapbox/mapbox-gl-draw/src/modes/index.js","node_modules/@mapbox/mapbox-gl-draw/src/options.js","node_modules/lodash.isequal/index.js","node_modules/@mapbox/mapbox-gl-draw/src/lib/string_sets_are_equal.js","node_modules/process/browser.js","node_modules/path-browserify/index.js","node_modules/jsonlint-lines/lib/jsonlint.js","node_modules/@mapbox/geojsonhint/lib/rhr.js","node_modules/@mapbox/geojsonhint/lib/object.js","node_modules/@mapbox/geojsonhint/lib/index.js","node_modules/@mapbox/mapbox-gl-draw/src/api.js","node_modules/@mapbox/mapbox-gl-draw/index.js","../src/lib/constants.js","../src/lib/common-selectors.js","../src/lib/draw-themes.js","../src/switchIteractions.js","../src/draw-rectangle-mode.js","../src/lib/create-vertex.js","../src/draw-rectangle-styles.js","node_modules/@turf/helpers/index.js","node_modules/@turf/meta/index.js","node_modules/@turf/area/index.js","index.js"],"names":["ModeHandler","mode","DrawContext","handlers","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","ctx","on","event","selector","fn","undefined","Error","push","render","id","store","featureChanged","delegate","eventName","iHandle","handles","length","handle","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","classes","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","sources","HOT","COLD","cursors","ADD","MOVE","DRAG","POINTER","NONE","types","POLYGON","LINE","POINT","geojsonTypes","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","modes","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","STATIC","events","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","updateActions","CHANGE_COORDINATES","meta","MIDPOINT","VERTEX","activeStates","ACTIVE","INACTIVE","interactions","LAT_MIN","LAT_RENDERED_MIN","LAT_MAX","LAT_RENDERED_MAX","LNG_MIN","LNG_MAX","sortFeatures","FEATURE_SORT_RANKS","Point","LineString","Polygon","comparator","a","b","score","geometry","type","Constants","area","features","map","feature","property","sort","mapEventToBoundingBox","mapEvent","buffer","point","x","y","StringSet","items","_items","_nums","_length","i","l","add","prototype","has","delete","values","Object","keys","forEach","k","v","JSON","parse","clear","META_TYPES","featuresAtClick","touch","featuresAtTouch","bbox","featuresAt","options","clickBuffer","touchBuffer","box","queryParams","styles","layers","s","queryRenderedFeatures","filter","indexOf","properties","featureIds","uniqueFeatures","featureId","getFeatureAtAndSetCursors","mouse","active","currentModeName","queueMapClasses","Math","sqrt","FINE_TOLERANCE","GROSS_TOLERANCE","INTERVAL","isClick","end","fineTolerance","grossTolerance","interval","time","moveDistance","TOLERANCE","isTap","tolerance","Feature","geojson","coordinates","changed","incomingCoords","coords","setCoordinates","getCoordinates","stringify","setProperty","value","toGeoJSON","internal","userProperties","name","create","isValid","updateCoordinate","pathOrLng","lngOrLat","lat","arguments","getCoordinate","addCoordinate","path","lng","parseInt","splice","removeCoordinate","ring","slice","every","ids","split","concat","parts","ringId","coordId","MultiFeature","models","MultiPoint","MultiLineString","MultiPolygon","takeAction","action","idx","tail","join","model","TypeError","_coordinatesToFeatures","Model","bind","replace","f","getFeatures","ModeInterface","drawConfig","_ctx","setSelected","setSelectedCoordinates","reduce","m","c","feature_id","get","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","opts","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actions","newSet","actionable","changeMode","eventOpts","updateUIClasses","activateUIButton","setActiveButton","bufferType","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","eventMapper","eventKeys","modeObject","modeObjectKeys","startOpts","state","key","modeHandler","eh","e","onCombineFeatures","onUncombineFeatures","mouseDownInfo","touchStartInfo","currentMode","isDrag","Date","getTime","originalEvent","stopPropagation","mousedrag","endInfo","touchdrag","button","buttons","which","target","featureTarget","preventDefault","touchEnabled","isKeyModeValid","code","modename","nextModeOptions","eventOptions","modebuilder","silent","fire","setDirty","srcElement","classList","keyCode","controls","line_string","polygon","zoomend","changeZoom","data","dataType","setup","some","style","getLayer","addLayers","actionState","api","defaultMode","currentModeRender","addEventListeners","container","addEventListener","keybindings","removeEventListeners","off","removeEventListener","getMode","toDenseArray","getSource","cleanup","newHotIds","newColdIds","isDirty","getAllIds","getChangedIds","hot","lastColdCount","cold","parent","coldChanged","renderFeature","source","featureInternal","setData","_emitSelectionChange","points","getSelectedCoordinates","coordinate","_deletedFeaturesToEmit","geojsonToEmit","clearChangedIds","Store","renderRequest","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_mapInitialConfig","requestAnimationFrame","refreshSelectedCoordinates","newSelectedCoordinates","createRenderBatch","holdRender","numRenders","getAll","selected","coord_path","setFeatureProperty","storeMapConfig","interaction","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","module","exports","extend","hasOwnProperty","classTypes","buttonElements","activeButton","currentMapClasses","nextMapClasses","classesToRemove","classesToAdd","remove","createControlButton","document","createElement","className","setAttribute","title","appendChild","clickedButton","deactivateButtons","onDeactivate","onActivate","clearMapClasses","addButtons","controlGroup","combine_features","uncombine_features","removeButtons","buttonId","parentNode","removeChild","controlContainer","mapLoadedInterval","onRemove","connect","clearInterval","removeLayers","onAdd","_fire","args","apply","getContainer","boxSelect","boxZoom","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","isOfMetaType","isShiftMousedown","shiftKey","isActiveFeature","isInactiveFeature","noTarget","isFeature","isVertex","isShiftDown","isEscapeKey","isEnterKey","isTrue","mouseEventPoint","mouseEvent","rect","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","parentId","startVertex","endVertex","startCoord","endCoord","ptA","project","ptB","mid","unproject","createSupplementaryPoints","subType","basePath","supplementaryPoints","processLine","line","lineBasePath","firstPointString","lastVertex","pointIndex","pointPath","String","vertex","isSelectedPath","midpoints","midpoint","stringifiedPoint","selectedPaths","lineIndex","subCoordinates","index","subFeature","setTimeout","doubleClickZoom","flatten","gj","mem","geom","_","geometries","memo","geoms","geojsonFeatures","delta","northInnerEdge","southInnerEdge","northOuterEdge","southOuterEdge","westEdge","eastEdge","bounds","featureSouthEdge","featureNorthEdge","featureWestEdge","featureEastEdge","constrainedDelta","ceil","abs","currentCoordinates","nextCoordinates","moveCoordinate","coord","moveRing","multi","SimpleSelect","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initiallySelectedFeatureIds","fireActionable","selectedFeatures","multiFeatures","featureType","allFeatures","stopExtendedInteractions","fireUpdate","CommonSelectors","clickAnywhere","clickOnVertex","clickOnFeature","wasSelected","coordPath","startPos","lngLat","startOnActiveFeature","isShiftClick","selectedFeatureIds","isFeatureSelected","startBoxSelect","dragMove","whileBoxSelect","current","minX","min","maxX","max","minY","maxY","translateValue","transform","WebkitTransform","width","height","featuresInBox","idsToSelect","getUniqueIds","display","featuresCombined","includes","subcoords","multiFeature","createdFeatures","deletedFeatures","featuresUncombined","DirectSelect","isMidpoint","selectedCoordPaths","startDragging","about","selectedIndex","selectedCoordinates","pathsToCoordinates","paths","stopDragging","selectedCoords","selectedCoordPoints","localeCompare","numeric","onVertex","noCoords","onFeature","onMidpoint","dragVertex","dragFeature","clickNoTarget","clickActiveFeature","clickInactive","DrawPoint","isActivePoint","stopDrawingAndRemove","isEventAtCoordinates","DrawPolygon","currentVertexPosition","isActivePolygon","coordinateCount","endPos","lineCoordinates","DrawLineString","direction","from","Array","isArray","lastCoord","isActiveLine","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","defaultOptions","displayControlsDefault","showControls","hideControls","addSources","sourceBucket","withDefaults","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","Item","array","noop","nextTick","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","jsonlint","o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","parser","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","Number","defineProperty","first_line","enumerable","__duplicateProperties__","table","defaultActions","parseError","str","hash","recoverable","_parseError","msg","message","input","self","stack","vstack","lstack","recovering","lexer","sharedState","setInput","yylloc","yyloc","ranges","getPrototypeOf","symbol","preErrorSymbol","r","p","newState","expected","lex","token","yyval","errStr","showPosition","text","match","loc","last_line","first_column","last_column","range","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","require","main","console","log","exit","readFileSync","normalize","featureTypes","getFeatureIdsAt","getSelectedPoints","set","featureCollection","renderBatch","toDelete","newIds","newIdsLookup","errors","geojsonhint","hint","precisionWarning","level","internalFeature","deleteAll","modeOptions","MapboxDraw","setupDraw","drawThemes","paint","fill-color","fill-outline-color","fill-opacity","circle-radius","circle-color","layout","line-cap","line-join","line-color","line-width","line-dasharray","circle-opacity","getIneractionSwitch","[object Object]","DrawRectangle","inspect","onInvalid","callInvalidOnce","allowCreateInvalid","stopOnEscape","rectangle","this","isRectangleInvalid","startPoint","endPoint","valid","is_invalid","ActivePolygonStyles","overrideDefaultStyles","themes","theme","overrided","OSM_STYLE","osm","tiles","tileSize","mapboxgl","Map","center","zoom","draw","DrawStyles","assign","draw_rectangle","addControl","currenArea","getElementById","onAreaChanged","textContent","toFixed"],"mappings":"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","file":"example.8091f2a7.js","sourceRoot":"..","sourcesContent":["\nconst ModeHandler = function(mode, DrawContext) {\n\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        handle.fn.call(ctx, event);\n        DrawContext.store.render();\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n\n  mode.start.call(ctx);\n\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\n\nexport default ModeHandler;\n","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}","export const classes = {\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const sources = {\n  HOT: 'mapbox-gl-draw-hot',\n  COLD: 'mapbox-gl-draw-cold'\n};\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select',\n  STATIC: 'static'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n","import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n","/**\n * Returns a bounding box representing the event's location.\n *\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\n * @return {Array<Array<number>>} Bounding box.\n */\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\n  return [\n    [mapEvent.point.x - buffer, mapEvent.point.y - buffer],\n    [mapEvent.point.x + buffer, mapEvent.point.y + buffer]\n  ];\n}\n\nexport default mapEventToBoundingBox;\n","function StringSet(items) {\n  this._items = {};\n  this._nums = {};\n  this._length = items ? items.length : 0;\n  if (!items) return;\n  for (let i = 0, l = items.length; i < l; i++) {\n    this.add(items[i]);\n    if (items[i] === undefined) continue;\n    if (typeof items[i] === 'string') this._items[items[i]] = i;\n    else this._nums[items[i]] = i;\n\n  }\n}\n\nStringSet.prototype.add = function(x) {\n  if (this.has(x)) return this;\n  this._length++;\n  if (typeof x === 'string') this._items[x] = this._length;\n  else this._nums[x] = this._length;\n  return this;\n};\n\nStringSet.prototype.delete = function(x) {\n  if (this.has(x) === false) return this;\n  this._length--;\n  delete this._items[x];\n  delete this._nums[x];\n  return this;\n};\n\nStringSet.prototype.has = function(x) {\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\n};\n\nStringSet.prototype.values = function() {\n  const values = [];\n  Object.keys(this._items).forEach((k) => {\n    values.push({ k, v: this._items[k] });\n  });\n  Object.keys(this._nums).forEach((k) => {\n    values.push({ k: JSON.parse(k), v: this._nums[k] });\n  });\n\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\n};\n\nStringSet.prototype.clear = function() {\n  this._length = 0;\n  this._items = {};\n  this._nums = {};\n  return this;\n};\n\nexport default StringSet;\n","import sortFeatures from './sort_features';\nimport mapEventToBoundingBox from './map_event_to_bounding_box';\nimport * as Constants from '../constants';\nimport StringSet from './string_set';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n","import featuresAt from './features_at';\nimport * as Constants from '../constants';\n\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = { mouse: Constants.cursors.NONE };\n\n  if (features[0]) {\n    classes.mouse = (features[0].properties.active === Constants.activeStates.ACTIVE) ?\n      Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n\n  return features[0];\n}\n","export default function(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt((x * x) + (y * y));\n}\n","import euclideanDistance from './euclidean_distance';\n\nconst FINE_TOLERANCE = 4;\nconst GROSS_TOLERANCE = 12;\nconst INTERVAL = 500;\n\nexport default function isClick(start, end, options = {}) {\n  const fineTolerance = (options.fineTolerance != null) ? options.fineTolerance : FINE_TOLERANCE;\n  const grossTolerance = (options.grossTolerance != null) ? options.grossTolerance : GROSS_TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < fineTolerance ||\n    (moveDistance < grossTolerance && (end.time - start.time) < interval);\n}\n","import euclideanDistance from './euclidean_distance';\n\nconst TOLERANCE = 25;\nconst INTERVAL = 250;\n\nexport default function isTap(start, end, options = {}) {\n  const tolerance = (options.tolerance != null) ? options.tolerance : TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < tolerance && (end.time - start.time) < interval;\n}\n","var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n","import hat from 'hat';\nimport * as Constants from '../constants';\n\nconst Feature = function(ctx, geojson) {\n  this.ctx = ctx;\n  this.properties = geojson.properties || {};\n  this.coordinates = geojson.geometry.coordinates;\n  this.id = geojson.id || hat();\n  this.type = geojson.geometry.type;\n};\n\nFeature.prototype.changed = function() {\n  this.ctx.store.featureChanged(this.id);\n};\n\nFeature.prototype.incomingCoords = function(coords) {\n  this.setCoordinates(coords);\n};\n\nFeature.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.coordinates));\n};\n\nFeature.prototype.setProperty = function(property, value) {\n  this.properties[property] = value;\n};\n\nFeature.prototype.toGeoJSON = function() {\n  return JSON.parse(JSON.stringify({\n    id: this.id,\n    type: Constants.geojsonTypes.FEATURE,\n    properties: this.properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  }));\n};\n\nFeature.prototype.internal = function(mode) {\n  const properties = {\n    id: this.id,\n    meta: Constants.meta.FEATURE,\n    'meta:type': this.type,\n    active: Constants.activeStates.INACTIVE,\n    mode\n  };\n\n  if (this.ctx.options.userProperties) {\n    for (const name in this.properties) {\n      properties[`user_${name}`] = this.properties[name];\n    }\n  }\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  };\n};\n\nexport default Feature;\n","import Feature from './feature';\n\nconst Point = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nPoint.prototype = Object.create(Feature.prototype);\n\nPoint.prototype.isValid = function() {\n  return typeof this.coordinates[0] === 'number' &&\n    typeof this.coordinates[1] === 'number';\n};\n\nPoint.prototype.updateCoordinate = function(pathOrLng, lngOrLat, lat) {\n  if (arguments.length === 3) {\n    this.coordinates = [lngOrLat, lat];\n  } else {\n    this.coordinates = [pathOrLng, lngOrLat];\n  }\n  this.changed();\n};\n\nPoint.prototype.getCoordinate = function() {\n  return this.getCoordinates();\n};\n\nexport default Point;\n","import Feature from './feature';\n\nconst LineString = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nLineString.prototype = Object.create(Feature.prototype);\n\nLineString.prototype.isValid = function() {\n  return this.coordinates.length > 1;\n};\n\nLineString.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const id = parseInt(path, 10);\n  this.coordinates.splice(id, 0, [lng, lat]);\n};\n\nLineString.prototype.getCoordinate = function(path) {\n  const id = parseInt(path, 10);\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\n};\n\nLineString.prototype.removeCoordinate = function(path) {\n  this.changed();\n  this.coordinates.splice(parseInt(path, 10), 1);\n};\n\nLineString.prototype.updateCoordinate = function(path, lng, lat) {\n  const id = parseInt(path, 10);\n  this.coordinates[id] = [lng, lat];\n  this.changed();\n};\n\nexport default LineString;\n","import Feature from './feature';\n\nconst Polygon = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\n};\n\nPolygon.prototype = Object.create(Feature.prototype);\n\nPolygon.prototype.isValid = function() {\n  if (this.coordinates.length === 0) return false;\n  return this.coordinates.every(ring => ring.length > 2);\n};\n\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\nPolygon.prototype.incomingCoords = function(coords) {\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\n  this.changed();\n};\n\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\nPolygon.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nPolygon.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n\n  const ring = this.coordinates[ids[0]];\n\n  ring.splice(ids[1], 0, [lng, lat]);\n};\n\nPolygon.prototype.removeCoordinate = function(path) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  if (ring) {\n    ring.splice(ids[1], 1);\n    if (ring.length < 3) {\n      this.coordinates.splice(ids[0], 1);\n    }\n  }\n};\n\nPolygon.prototype.getCoordinate = function(path) {\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\n};\n\nPolygon.prototype.getCoordinates = function() {\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\n};\n\nPolygon.prototype.updateCoordinate = function(path, lng, lat) {\n  this.changed();\n  const parts = path.split('.');\n  const ringId = parseInt(parts[0], 10);\n  const coordId = parseInt(parts[1], 10);\n\n  if (this.coordinates[ringId] === undefined) {\n    this.coordinates[ringId] = [];\n  }\n\n  this.coordinates[ringId][coordId] = [lng, lat];\n};\n\nexport default Polygon;\n","import Feature from './feature';\nimport * as Constants from '../constants';\nimport hat from 'hat';\n\nimport MultiPoint from './point';\nimport MultiLineString from './line_string';\nimport MultiPolygon from './polygon';\n\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\n\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\n\nconst MultiFeature = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\n\nMultiFeature.prototype = Object.create(Feature.prototype);\n\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: hat(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\n\nMultiFeature.prototype.isValid = function() {\n  return this.features.every(f => f.isValid());\n};\n\nMultiFeature.prototype.setCoordinates = function(coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\n\nMultiFeature.prototype.getCoordinate = function(path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\n\nMultiFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\n\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.removeCoordinate = function(path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\n\nMultiFeature.prototype.getFeatures = function() {\n  return this.features;\n};\n\nexport default MultiFeature;\n","import * as Constants from '../constants';\nimport featuresAt from '../lib/features_at';\nimport Point from '../feature_types/point';\nimport LineString from '../feature_types/line_string';\nimport Polygon from '../feature_types/polygon';\nimport MultiFeature from '../feature_types/multi_feature';\n\nexport default function ModeInterface(ctx) {\n  this.map = ctx.map;\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\n  this._ctx = ctx;\n}\n\n/**\n * Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/master/src/feature_types/feature.js)\n */\nModeInterface.prototype.setSelected = function(features) {\n  return this._ctx.store.setSelected(features);\n};\n\n/**\n * Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', featureId: 'string'}\n */\nModeInterface.prototype.setSelectedCoordinates = function(coords) {\n  this._ctx.store.setSelectedCoordinates(coords);\n  coords.reduce((m, c) => {\n    if (m[c.feature_id] === undefined) {\n      m[c.feature_id] = true;\n      this._ctx.store.get(c.feature_id).changed();\n    }\n    return m;\n  }, {});\n};\n\n/**\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/master/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}\n */\nModeInterface.prototype.getSelected = function() {\n  return this._ctx.store.getSelected();\n};\n\n/**\n * Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}\n */\nModeInterface.prototype.getSelectedIds = function() {\n  return this._ctx.store.getSelectedIds();\n};\n\n/**\n * Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}\n */\nModeInterface.prototype.isSelected = function(id) {\n  return this._ctx.store.isSelected(id);\n};\n\n/**\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/master/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}\n */\nModeInterface.prototype.getFeature = function(id) {\n  return this._ctx.store.get(id);\n};\n\n/**\n * Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id\n */\nModeInterface.prototype.select = function(id) {\n  return this._ctx.store.select(id);\n};\n\n/**\n * Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id\n */\nModeInterface.prototype.deselect = function(id) {\n  return this._ctx.store.deselect(id);\n};\n\n/**\n * Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id\n */\nModeInterface.prototype.deleteFeature = function(id, opts = {}) {\n  return this._ctx.store.delete(id, opts);\n};\n\n/**\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/master/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add\n */\nModeInterface.prototype.addFeature = function(feature) {\n  return this._ctx.store.add(feature);\n};\n\n/**\n * Clear all selected features\n */\nModeInterface.prototype.clearSelectedFeatures = function() {\n  return this._ctx.store.clearSelected();\n};\n\n/**\n * Clear all selected coordinates\n */\nModeInterface.prototype.clearSelectedCoordinates = function() {\n  return this._ctx.store.clearSelectedCoordinates();\n};\n\n/**\n * Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/master/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions\n */\nModeInterface.prototype.setActionableState = function(actions = {}) {\n  const newSet = {\n    trash: actions.trash || false,\n    combineFeatures: actions.combineFeatures || false,\n    uncombineFeatures: actions.uncombineFeatures || false\n  };\n  return this._ctx.events.actionable(newSet);\n};\n\n/**\n * Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.\n */\nModeInterface.prototype.changeMode = function(mode, opts = {}, eventOpts = {}) {\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\n};\n\n/**\n * Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts\n */\nModeInterface.prototype.updateUIClasses = function(opts) {\n  return this._ctx.ui.queueMapClasses(opts);\n};\n\n/**\n * If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\n */\nModeInterface.prototype.activateUIButton = function(name) {\n  return this._ctx.ui.setActiveButton(name);\n};\n\n/**\n * Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\n */\nModeInterface.prototype.featuresAt = function(event, bbox, bufferType = 'click') {\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\n  return featuresAt[bufferType](event, bbox, this._ctx);\n};\n\n/**\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/master/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}\n */\nModeInterface.prototype.newFeature = function(geojson) {\n  const type = geojson.geometry.type;\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\n  return new MultiFeature(this._ctx, geojson);\n};\n\n/**\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/master/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}\n */\nModeInterface.prototype.isInstanceOf = function(type, feature) {\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\n  throw new Error(`Unknown feature class: ${type}`);\n};\n\n/**\n * Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id\n */\nModeInterface.prototype.doRender = function(id) {\n  return this._ctx.store.featureChanged(id);\n};\n\n","import ModeInterface from './mode_interface_accessors';\nexport default ModeInterface;\n\n/**\n * Triggered while a mode is being transitioned into.\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\n * @name MODE.onSetup\n * @returns {Object} - this object will be passed to all other life cycle functions\n */\nModeInterface.prototype.onSetup = function() {};\n\n/**\n * Triggered when a drag event is detected on the map\n * @name MODE.onDrag\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onDrag = function() {};\n\n/**\n * Triggered when the mouse is clicked\n * @name MODE.onClick\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onClick = function() {};\n\n/**\n * Triggered with the mouse is moved\n * @name MODE.onMouseMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseMove = function() {};\n\n/**\n * Triggered when the mouse button is pressed down\n * @name MODE.onMouseDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseDown = function() {};\n\n/**\n * Triggered when the mouse button is released\n * @name MODE.onMouseUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseUp = function() {};\n\n/**\n * Triggered when the mouse leaves the map's container\n * @name MODE.onMouseOut\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseOut = function() {};\n\n/**\n * Triggered when a key up event is detected\n * @name MODE.onKeyUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyUp = function() {};\n\n/**\n * Triggered when a key down event is detected\n * @name MODE.onKeyDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyDown = function() {};\n\n/**\n * Triggered when a touch event is started\n * @name MODE.onTouchStart\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchStart = function() {};\n\n/**\n * Triggered when one drags thier finger on a mobile device\n * @name MODE.onTouchMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchMove = function() {};\n\n/**\n * Triggered when one removes their finger from the map\n * @name MODE.onTouchEnd\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchEnd = function() {};\n\n/**\n * Triggered when one quicly taps the map\n * @name MODE.onTap\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTap = function() {};\n\n/**\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\n * @name MODE.onStop\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onStop = function() {};\n\n/**\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/master/API.md#trash-draw) is called.\n * @name MODE.onTrash\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onTrash = function() {};\n\n/**\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/master/API.md#combinefeatures-draw) is called.\n * @name MODE.onCombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onCombineFeature = function() {};\n\n/**\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/master/API.md#uncombinefeatures-draw) is called.\n * @name MODE.onUncombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onUncombineFeature = function() {};\n\n/**\n * Triggered per feature on render to convert raw features into set of features for display on the map\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/master/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\n * @name MODE.toDisplayFeatures\n * @param state {Object} - a mutible state object created by onSetup\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\n */\nModeInterface.prototype.toDisplayFeatures = function() {\n  throw new Error('You must overwrite toDisplayFeatures');\n};\n\n","import ModeInterface from './mode_interface';\n\nconst eventMapper = {\n  drag: 'onDrag',\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseout: 'onMouseOut',\n  keyup: 'onKeyUp',\n  keydown: 'onKeyDown',\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd',\n  tap: 'onTap'\n};\n\nconst eventKeys = Object.keys(eventMapper);\n\nexport default function(modeObject) {\n  const modeObjectKeys = Object.keys(modeObject);\n\n  return function(ctx, startOpts = {}) {\n    let state = {};\n\n    const mode = modeObjectKeys.reduce((m, k) => {\n      m[k] = modeObject[k];\n      return m;\n    }, new ModeInterface(ctx));\n\n    function wrapper(eh) {\n      return function(e) {\n        mode[eh](state, e);\n      };\n    }\n\n    return {\n      start() {\n        state = mode.onSetup(startOpts); // this should set ui buttons\n\n        // Adds event handlers for all event options\n        // add sets the selector to false for all\n        // handlers that are not present in the mode\n        // to reduce on render calls for functions that\n        // have no logic\n        eventKeys.forEach((key) => {\n          const modeHandler = eventMapper[key];\n          let selector = () => false;\n          if (modeObject[modeHandler]) {\n            selector = () => true;\n          }\n          this.on(key, selector, wrapper(modeHandler));\n        });\n\n      },\n      stop() {\n        mode.onStop(state);\n      },\n      trash() {\n        mode.onTrash(state);\n      },\n      combineFeatures() {\n        mode.onCombineFeatures(state);\n      },\n      uncombineFeatures() {\n        mode.onUncombineFeatures(state);\n      },\n      render(geojson, push) {\n        mode.toDisplayFeatures(state, geojson, push);\n      }\n    };\n  };\n}\n","import setupModeHandler from './lib/mode_handler';\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor';\nimport featuresAt from './lib/features_at';\nimport isClick from './lib/is_click';\nimport isTap from './lib/is_tap';\nimport * as Constants from './constants';\nimport objectToMode from './modes/object_to_mode';\n\nexport default function(ctx) {\n\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\n    m[k] = objectToMode(ctx.options.modes[k]);\n    return m;\n  }, {});\n\n  let mouseDownInfo = {};\n  let touchStartInfo = {};\n  const events = {};\n  let currentModeName = null;\n  let currentMode = null;\n\n  events.drag = function(event, isDrag) {\n    if (isDrag({\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      ctx.ui.queueMapClasses({ mouse: Constants.cursors.DRAG });\n      currentMode.drag(event);\n    } else {\n      event.originalEvent.stopPropagation();\n    }\n  };\n\n  events.mousedrag = function(event) {\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\n  };\n\n  events.touchdrag = function(event) {\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\n  };\n\n  events.mousemove = function(event) {\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\n    if (button === 1) {\n      return events.mousedrag(event);\n    }\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousemove(event);\n  };\n\n  events.mousedown = function(event) {\n    mouseDownInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousedown(event);\n  };\n\n  events.mouseup = function(event) {\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n\n    if (isClick(mouseDownInfo, {\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      currentMode.click(event);\n    } else {\n      currentMode.mouseup(event);\n    }\n  };\n\n  events.mouseout = function(event) {\n    currentMode.mouseout(event);\n  };\n\n  events.touchstart = function(event) {\n    // Prevent emulated mouse events because we will fully handle the touch here.\n    // This does not stop the touch events from propogating to mapbox though.\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    touchStartInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    currentMode.touchstart(event);\n  };\n\n  events.touchmove = function(event) {\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    currentMode.touchmove(event);\n    return events.touchdrag(event);\n  };\n\n  events.touchend = function(event) {\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    if (isTap(touchStartInfo, {\n      time: new Date().getTime(),\n      point: event.point\n    })) {\n      currentMode.tap(event);\n    } else {\n      currentMode.touchend(event);\n    }\n  };\n\n  // 8 - Backspace\n  // 46 - Delete\n  const isKeyModeValid = code => !(code === 8 || code === 46 || (code >= 48 && code <= 57));\n\n  events.keydown = function(event) {\n    if ((event.srcElement || event.target).classList[0] !== 'mapboxgl-canvas') return; // we only handle events on the map\n\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\n      event.preventDefault();\n      currentMode.trash();\n    } else if (isKeyModeValid(event.keyCode)) {\n      currentMode.keydown(event);\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\n      changeMode(Constants.modes.DRAW_POINT);\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\n      changeMode(Constants.modes.DRAW_LINE_STRING);\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\n      changeMode(Constants.modes.DRAW_POLYGON);\n    }\n  };\n\n  events.keyup = function(event) {\n    if (isKeyModeValid(event.keyCode)) {\n      currentMode.keyup(event);\n    }\n  };\n\n  events.zoomend = function() {\n    ctx.store.changeZoom();\n  };\n\n  events.data = function(event) {\n    if (event.dataType === 'style') {\n      const { setup, map, options, store } = ctx;\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\n      if (!hasLayers) {\n        setup.addLayers();\n        store.setDirty();\n        store.render();\n      }\n    }\n  };\n\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\n    currentMode.stop();\n\n    const modebuilder = modes[modename];\n    if (modebuilder === undefined) {\n      throw new Error(`${modename} is not valid`);\n    }\n    currentModeName = modename;\n    const mode = modebuilder(ctx, nextModeOptions);\n    currentMode = setupModeHandler(mode, ctx);\n\n    if (!eventOptions.silent) {\n      ctx.map.fire(Constants.events.MODE_CHANGE, { mode: modename});\n    }\n\n    ctx.store.setDirty();\n    ctx.store.render();\n  }\n\n  const actionState = {\n    trash: false,\n    combineFeatures: false,\n    uncombineFeatures: false\n  };\n\n  function actionable(actions) {\n    let changed = false;\n    Object.keys(actions).forEach((action) => {\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\n      if (actionState[action] !== actions[action]) changed = true;\n      actionState[action] = actions[action];\n    });\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, { actions: actionState });\n  }\n\n  const api = {\n    start() {\n      currentModeName = ctx.options.defaultMode;\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\n    },\n    changeMode,\n    actionable,\n    currentModeName() {\n      return currentModeName;\n    },\n    currentModeRender(geojson, push) {\n      return currentMode.render(geojson, push);\n    },\n    fire(name, event) {\n      if (events[name]) {\n        events[name](event);\n      }\n    },\n    addEventListeners() {\n      ctx.map.on('mousemove', events.mousemove);\n      ctx.map.on('mousedown', events.mousedown);\n      ctx.map.on('mouseup', events.mouseup);\n      ctx.map.on('data', events.data);\n\n      ctx.map.on('touchmove', events.touchmove);\n      ctx.map.on('touchstart', events.touchstart);\n      ctx.map.on('touchend', events.touchend);\n\n      ctx.container.addEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.addEventListener('keydown', events.keydown);\n        ctx.container.addEventListener('keyup', events.keyup);\n      }\n    },\n    removeEventListeners() {\n      ctx.map.off('mousemove', events.mousemove);\n      ctx.map.off('mousedown', events.mousedown);\n      ctx.map.off('mouseup', events.mouseup);\n      ctx.map.off('data', events.data);\n\n      ctx.map.off('touchmove', events.touchmove);\n      ctx.map.off('touchstart', events.touchstart);\n      ctx.map.off('touchend', events.touchend);\n\n      ctx.container.removeEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.removeEventListener('keydown', events.keydown);\n        ctx.container.removeEventListener('keyup', events.keyup);\n      }\n    },\n    trash(options) {\n      currentMode.trash(options);\n    },\n    combineFeatures() {\n      currentMode.combineFeatures();\n    },\n    uncombineFeatures() {\n      currentMode.uncombineFeatures();\n    },\n    getMode() {\n      return currentModeName;\n    }\n  };\n\n  return api;\n}\n","/**\n * Derive a dense array (no `undefined`s) from a single value or array.\n *\n * @param {any} x\n * @return {Array<any>}\n */\nfunction toDenseArray(x) {\n  return [].concat(x).filter(y => y !== undefined);\n}\n\nexport default toDenseArray;\n","import * as Constants from './constants';\n\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const mapExists = store.ctx.map && store.ctx.map.getSource(Constants.sources.HOT) !== undefined;\n  if (!mapExists) return cleanup();\n\n  const mode = store.ctx.events.currentModeName();\n\n  store.ctx.ui.queueMapClasses({ mode });\n\n  let newHotIds = [];\n  let newColdIds = [];\n\n  if (store.isDirty) {\n    newColdIds = store.getAllIds();\n  } else {\n    newHotIds = store.getChangedIds().filter(id => store.get(id) !== undefined);\n    newColdIds = store.sources.hot.filter(geojson => geojson.properties.id && newHotIds.indexOf(geojson.properties.id) === -1 && store.get(geojson.properties.id) !== undefined).map(geojson => geojson.properties.id);\n  }\n\n  store.sources.hot = [];\n  const lastColdCount = store.sources.cold.length;\n  store.sources.cold = store.isDirty ? [] : store.sources.cold.filter((geojson) => {\n    const id = geojson.properties.id || geojson.properties.parent;\n    return newHotIds.indexOf(id) === -1;\n  });\n\n  const coldChanged = lastColdCount !== store.sources.cold.length || newColdIds.length > 0;\n  newHotIds.forEach(id => renderFeature(id, 'hot'));\n  newColdIds.forEach(id => renderFeature(id, 'cold'));\n\n  function renderFeature(id, source) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    store.ctx.events.currentModeRender(featureInternal, (geojson) => {\n      store.sources[source].push(geojson);\n    });\n  }\n\n  if (coldChanged) {\n    store.ctx.map.getSource(Constants.sources.COLD).setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: store.sources.cold\n    });\n  }\n\n  store.ctx.map.getSource(Constants.sources.HOT).setData({\n    type: Constants.geojsonTypes.FEATURE_COLLECTION,\n    features: store.sources.hot\n  });\n\n  if (store._emitSelectionChange) {\n    store.ctx.map.fire(Constants.events.SELECTION_CHANGE, {\n      features: store.getSelected().map(feature => feature.toGeoJSON()),\n      points: store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    });\n    store._emitSelectionChange = false;\n  }\n\n  if (store._deletedFeaturesToEmit.length) {\n    const geojsonToEmit = store._deletedFeaturesToEmit.map(feature => feature.toGeoJSON());\n\n    store._deletedFeaturesToEmit = [];\n\n    store.ctx.map.fire(Constants.events.DELETE, {\n      features: geojsonToEmit\n    });\n  }\n\n  cleanup();\n  store.ctx.map.fire(Constants.events.RENDER, {});\n\n  function cleanup() {\n    store.isDirty = false;\n    store.clearChangedIds();\n  }\n}\n","import toDenseArray from './lib/to_dense_array';\nimport StringSet from './lib/string_set';\nimport render from './render';\nimport {interactions} from './constants';\n\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._deletedFeaturesToEmit = [];\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.sources = {\n    hot: [],\n    cold: []\n  };\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n      });\n    }\n  };\n  this.isDirty = false;\n}\n\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function() {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function() {\n    numRenders++;\n  };\n\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function() {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function(featureId) {\n  this._changedFeatureIds.add(featureId);\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function() {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function() {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function() {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n *\n * @return {Store} this\n */\nStore.prototype.add = function(feature) {\n  this.featureChanged(feature.id);\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (this._deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        this._deletedFeaturesToEmit.push(this._features[id]);\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function(id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function() {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function(options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), { silent: options.silent });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function(featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), { silent: options.silent });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), { silent: options.silent });\n\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function(coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function() {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function() {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function() {\n  return this._selectedFeatureIds.values().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function() {\n  const selected = this._selectedCoordinates.map((coordinate) => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function(featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n*/\nStore.prototype.setFeatureProperty = function(featureId, property, value) {\n  this.get(featureId).setProperty(property, value);\n  this.featureChanged(featureId);\n};\n\nfunction refreshSelectedCoordinates(store, options) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function() {\n  interactions.forEach((interaction) => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function() {\n  Object.keys(this._mapInitialConfig).forEach((key) => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function(interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","import xtend from 'xtend';\nimport * as Constants from './constants';\n\nconst classTypes = ['mode', 'feature', 'mouse'];\n\nexport default function(ctx) {\n\n\n  const buttonElements = {};\n  let activeButton = null;\n\n  let currentMapClasses = {\n    mode: null, // e.g. mode-direct_select\n    feature: null, // e.g. feature-vertex\n    mouse: null // e.g. mouse-move\n  };\n\n  let nextMapClasses = {\n    mode: null,\n    feature: null,\n    mouse: null\n  };\n\n  function clearMapClasses() {\n    queueMapClasses({mode:null, feature:null, mouse:null});\n    updateMapClasses();\n  }\n\n  function queueMapClasses(options) {\n    nextMapClasses = xtend(nextMapClasses, options);\n  }\n\n  function updateMapClasses() {\n    if (!ctx.container) return;\n\n    const classesToRemove = [];\n    const classesToAdd = [];\n\n    classTypes.forEach((type) => {\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\n\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\n      if (nextMapClasses[type] !== null) {\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\n      }\n    });\n\n    if (classesToRemove.length > 0) {\n      ctx.container.classList.remove(...classesToRemove);\n    }\n\n    if (classesToAdd.length > 0) {\n      ctx.container.classList.add(...classesToAdd);\n    }\n\n    currentMapClasses = xtend(currentMapClasses, nextMapClasses);\n  }\n\n  function createControlButton(id, options = {}) {\n    const button = document.createElement('button');\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\n    button.setAttribute('title', options.title);\n    options.container.appendChild(button);\n\n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const clickedButton = e.target;\n      if (clickedButton === activeButton) {\n        deactivateButtons();\n        options.onDeactivate();\n        return;\n      }\n\n      setActiveButton(id);\n      options.onActivate();\n    }, true);\n\n    return button;\n  }\n\n  function deactivateButtons() {\n    if (!activeButton) return;\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\n    activeButton = null;\n  }\n\n  function setActiveButton(id) {\n    deactivateButtons();\n\n    const button = buttonElements[id];\n    if (!button) return;\n\n    if (button && id !== 'trash') {\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\n      activeButton = button;\n    }\n  }\n\n  function addButtons() {\n    const controls = ctx.options.controls;\n    const controlGroup = document.createElement('div');\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\n\n    if (!controls) return controlGroup;\n\n    if (controls[Constants.types.LINE]) {\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_LINE,\n        title: `LineString tool ${ctx.options.keybindings ? '(l)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POLYGON]) {\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\n        title: `Polygon tool ${ctx.options.keybindings ? '(p)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POINT]) {\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POINT,\n        title: `Marker tool ${ctx.options.keybindings ? '(m)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls.trash) {\n      buttonElements.trash = createControlButton('trash', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\n        title: 'Delete',\n        onActivate: () => {\n          ctx.events.trash();\n        }\n      });\n    }\n\n    if (controls.combine_features) {\n      buttonElements.combine_features = createControlButton('combineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\n        title: 'Combine',\n        onActivate: () => {\n          ctx.events.combineFeatures();\n        }\n      });\n    }\n\n    if (controls.uncombine_features) {\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\n        title: 'Uncombine',\n        onActivate: () => {\n          ctx.events.uncombineFeatures();\n        }\n      });\n    }\n\n    return controlGroup;\n  }\n\n  function removeButtons() {\n    Object.keys(buttonElements).forEach((buttonId) => {\n      const button = buttonElements[buttonId];\n      if (button.parentNode) {\n        button.parentNode.removeChild(button);\n      }\n      delete buttonElements[buttonId];\n    });\n  }\n\n  return {\n    setActiveButton,\n    queueMapClasses,\n    updateMapClasses,\n    clearMapClasses,\n    addButtons,\n    removeButtons\n  };\n}\n","import events from './events';\nimport Store from './store';\nimport ui from './ui';\nimport * as Constants from './constants';\nimport xtend from 'xtend';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      if (process.env.NODE_ENV !== 'test') {\n        // Monkey patch to resolve breaking change to `fire` introduced by\n        // mapbox-gl-js. See mapbox/mapbox-gl-draw/issues/766.\n        const _fire = map.fire;\n        map.fire = function(type, event) {\n          // eslint-disable-next-line\n          let args = arguments;\n\n          if (_fire.length === 1 && arguments.length !== 1) {\n            args = [xtend({}, { type }, event)];\n          }\n\n          return _fire.apply(map, args);\n        };\n      }\n\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n","export default [\n  {\n    'id': 'gl-draw-polygon-fill-inactive',\n    'type': 'fill',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'fill-color': '#3bb2d0',\n      'fill-outline-color': '#3bb2d0',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-active',\n    'type': 'fill',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#fbb03b',\n      'fill-outline-color': '#fbb03b',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-midpoint',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'midpoint']],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-active',\n    'type': 'line',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'LineString'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-active',\n    'type': 'line',\n    'filter': ['all',\n      ['==', '$type', 'LineString'],\n      ['==', 'active', 'true']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-point-point-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-opacity': 1,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#3bb2d0'\n    }\n  },\n  {\n    'id': 'gl-draw-point-stroke-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'active', 'true'],\n      ['!=', 'meta', 'midpoint']\n    ],\n    'paint': {\n      'circle-radius': 7,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['!=', 'meta', 'midpoint'],\n      ['==', 'active', 'true']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-static',\n    'type': 'fill',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#404040',\n      'fill-outline-color': '#404040',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'LineString']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-point-static',\n    'type': 'circle',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Point']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#404040'\n    }\n  }\n];\n","import * as Constants from '../constants';\n\nexport function isOfMetaType(type) {\n  return function(e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\n\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\n\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\n\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\n\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\n\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\n\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\n\nexport function isTrue() {\n  return true;\n}\n","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","import Point from '@mapbox/point-geometry';\n\n/**\n * Returns a Point representing a mouse event's position\n * relative to a containing element.\n *\n * @param {MouseEvent} mouseEvent\n * @param {Node} container\n * @returns {Point}\n */\nfunction mouseEventPoint(mouseEvent, container) {\n  const rect = container.getBoundingClientRect();\n  return new Point(\n    mouseEvent.clientX - rect.left - (container.clientLeft || 0),\n    mouseEvent.clientY - rect.top - (container.clientTop || 0)\n  );\n}\n\nexport default mouseEventPoint;\n","import * as Constants from '../constants';\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\nexport default function(parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}\n","import * as Constants from '../constants';\n\nexport default function(parent, startVertex, endVertex, map) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const ptA = map.project([ startCoord[0], startCoord[1] ]);\n  const ptB = map.project([ endCoord[0], endCoord[1] ]);\n  const mid = map.unproject([ (ptA.x + ptB.x) / 2, (ptA.y + ptB.y) / 2 ]);\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}\n","import createVertex from './create_vertex';\nimport createMidpoint from './create_midpoint';\nimport * as Constants from '../constants';\n\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\n  const { type, coordinates } = geojson.geometry;\n  const featureId = geojson.properties && geojson.properties.id;\n\n  let supplementaryPoints = [];\n\n  if (type === Constants.geojsonTypes.POINT) {\n    // For points, just create a vertex\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    // Cycle through a Polygon's rings and\n    // process each line\n    coordinates.forEach((line, lineIndex) => {\n      processLine(line, (basePath !== null) ? `${basePath}.${lineIndex}` : String(lineIndex));\n    });\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    processLine(coordinates, basePath);\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    processMultiGeometry();\n  }\n\n  function processLine(line, lineBasePath) {\n    let firstPointString = '';\n    let lastVertex = null;\n    line.forEach((point, pointIndex) => {\n      const pointPath = (lineBasePath !== undefined && lineBasePath !== null) ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\n\n      // If we're creating midpoints, check if there was a\n      // vertex before this one. If so, add a midpoint\n      // between that vertex and this one.\n      if (options.midpoints && lastVertex) {\n        const midpoint = createMidpoint(featureId, lastVertex, vertex, options.map);\n        if (midpoint) {\n          supplementaryPoints.push(midpoint);\n        }\n      }\n      lastVertex = vertex;\n\n      // A Polygon line's last point is the same as the first point. If we're on the last\n      // point, we want to draw a midpoint before it but not another vertex on it\n      // (since we already a vertex there, from the first point).\n      const stringifiedPoint = JSON.stringify(point);\n      if (firstPointString !== stringifiedPoint) {\n        supplementaryPoints.push(vertex);\n      }\n      if (pointIndex === 0) {\n        firstPointString = stringifiedPoint;\n      }\n    });\n  }\n\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) return false;\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  // Split a multi-geometry into constituent\n  // geometries, and accumulate the supplementary points\n  // for each of those constituents\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\n    coordinates.forEach((subCoordinates, index) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: geojson.properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates\n        }\n      };\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\n    });\n  }\n\n  return supplementaryPoints;\n}\n\nexport default createSupplementaryPoints;\n","export default {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport DrawRectangle, {\n  DrawStyles,\n} from \"mapbox-gl-draw-rectangle-validation-mode\";\n\nimport area from \"@turf/area\";\n\nconst OSM_STYLE = {\n  version: 8,\n  sources: {\n    osm: {\n      type: \"raster\",\n      tiles: [\n        \"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        \"https://b.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        \"https://c.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      ],\n      tileSize: 256,\n    },\n  },\n  layers: [\n    {\n      id: \"osm\",\n      source: \"osm\",\n      type: \"raster\",\n    },\n  ],\n};\n\nconst map = new mapboxgl.Map({\n  container: \"map\", // container id\n  style: OSM_STYLE,\n  center: [-91.874, 42.76], // starting position\n  zoom: 12, // starting zoom\n});\n\nconst draw = new MapboxDraw({\n  userProperties: true,\n  displayControlsDefault: false,\n  styles: DrawStyles,\n  modes: Object.assign(MapboxDraw.modes, {\n    draw_rectangle: DrawRectangle,\n  }),\n});\nmap.addControl(draw);\n\nconst currenArea = document.getElementById(\"area\");\ncurrenArea.textContent = \"0\";\n\nfunction onAreaChanged(area) {\n  currenArea.textContent = `${(area / 1_000_000).toFixed(2)}`;\n}\n\ndocument.getElementById(\"draw-rectangle\").addEventListener(\"click\", () => {\n  console.log(\"let's draw!\");\n  draw.changeMode(\"draw_rectangle\", {\n    inspect: (rectangle) => {\n      const a = area(rectangle);\n      return { valid: a < 5 * 1_000_000, area: a };\n    },\n    allowCreateInvalid: false, // default false\n    callInvalidOnce: false, // default false - calls exceedCallback on each mouse move\n    onInvalid: ({ area }) => console.log(`area exceeded! ${area}`), // optional\n    stopOnEscape: true, // default true\n  });\n});\n","module.exports = function flatten(list) {\n    return _flatten(list);\n\n    function _flatten(list) {\n        if (Array.isArray(list) && list.length &&\n            typeof list[0] === 'number') {\n            return [list];\n        }\n        return list.reduce(function (acc, item) {\n            if (Array.isArray(item) && Array.isArray(item[0])) {\n                return acc.concat(_flatten(item));\n            } else {\n                acc.push(item);\n                return acc;\n            }\n        }, []);\n    }\n};\n","var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n","var traverse = module.exports = function (obj) {\n    return new Traverse(obj);\n};\n\nfunction Traverse (obj) {\n    this.value = obj;\n}\n\nTraverse.prototype.get = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            node = undefined;\n            break;\n        }\n        node = node[key];\n    }\n    return node;\n};\n\nTraverse.prototype.has = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            return false;\n        }\n        node = node[key];\n    }\n    return true;\n};\n\nTraverse.prototype.set = function (ps, value) {\n    var node = this.value;\n    for (var i = 0; i < ps.length - 1; i ++) {\n        var key = ps[i];\n        if (!hasOwnProperty.call(node, key)) node[key] = {};\n        node = node[key];\n    }\n    node[ps[i]] = value;\n    return value;\n};\n\nTraverse.prototype.map = function (cb) {\n    return walk(this.value, cb, true);\n};\n\nTraverse.prototype.forEach = function (cb) {\n    this.value = walk(this.value, cb, false);\n    return this.value;\n};\n\nTraverse.prototype.reduce = function (cb, init) {\n    var skip = arguments.length === 1;\n    var acc = skip ? this.value : init;\n    this.forEach(function (x) {\n        if (!this.isRoot || !skip) {\n            acc = cb.call(this, acc, x);\n        }\n    });\n    return acc;\n};\n\nTraverse.prototype.paths = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.path); \n    });\n    return acc;\n};\n\nTraverse.prototype.nodes = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.node);\n    });\n    return acc;\n};\n\nTraverse.prototype.clone = function () {\n    var parents = [], nodes = [];\n    \n    return (function clone (src) {\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i] === src) {\n                return nodes[i];\n            }\n        }\n        \n        if (typeof src === 'object' && src !== null) {\n            var dst = copy(src);\n            \n            parents.push(src);\n            nodes.push(dst);\n            \n            forEach(objectKeys(src), function (key) {\n                dst[key] = clone(src[key]);\n            });\n            \n            parents.pop();\n            nodes.pop();\n            return dst;\n        }\n        else {\n            return src;\n        }\n    })(this.value);\n};\n\nfunction walk (root, cb, immutable) {\n    var path = [];\n    var parents = [];\n    var alive = true;\n    \n    return (function walker (node_) {\n        var node = immutable ? copy(node_) : node_;\n        var modifiers = {};\n        \n        var keepGoing = true;\n        \n        var state = {\n            node : node,\n            node_ : node_,\n            path : [].concat(path),\n            parent : parents[parents.length - 1],\n            parents : parents,\n            key : path.slice(-1)[0],\n            isRoot : path.length === 0,\n            level : path.length,\n            circular : null,\n            update : function (x, stopHere) {\n                if (!state.isRoot) {\n                    state.parent.node[state.key] = x;\n                }\n                state.node = x;\n                if (stopHere) keepGoing = false;\n            },\n            'delete' : function (stopHere) {\n                delete state.parent.node[state.key];\n                if (stopHere) keepGoing = false;\n            },\n            remove : function (stopHere) {\n                if (isArray(state.parent.node)) {\n                    state.parent.node.splice(state.key, 1);\n                }\n                else {\n                    delete state.parent.node[state.key];\n                }\n                if (stopHere) keepGoing = false;\n            },\n            keys : null,\n            before : function (f) { modifiers.before = f },\n            after : function (f) { modifiers.after = f },\n            pre : function (f) { modifiers.pre = f },\n            post : function (f) { modifiers.post = f },\n            stop : function () { alive = false },\n            block : function () { keepGoing = false }\n        };\n        \n        if (!alive) return state;\n        \n        function updateState() {\n            if (typeof state.node === 'object' && state.node !== null) {\n                if (!state.keys || state.node_ !== state.node) {\n                    state.keys = objectKeys(state.node)\n                }\n                \n                state.isLeaf = state.keys.length == 0;\n                \n                for (var i = 0; i < parents.length; i++) {\n                    if (parents[i].node_ === node_) {\n                        state.circular = parents[i];\n                        break;\n                    }\n                }\n            }\n            else {\n                state.isLeaf = true;\n                state.keys = null;\n            }\n            \n            state.notLeaf = !state.isLeaf;\n            state.notRoot = !state.isRoot;\n        }\n        \n        updateState();\n        \n        // use return values to update if defined\n        var ret = cb.call(state, state.node);\n        if (ret !== undefined && state.update) state.update(ret);\n        \n        if (modifiers.before) modifiers.before.call(state, state.node);\n        \n        if (!keepGoing) return state;\n        \n        if (typeof state.node == 'object'\n        && state.node !== null && !state.circular) {\n            parents.push(state);\n            \n            updateState();\n            \n            forEach(state.keys, function (key, i) {\n                path.push(key);\n                \n                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\n                \n                var child = walker(state.node[key]);\n                if (immutable && hasOwnProperty.call(state.node, key)) {\n                    state.node[key] = child.node;\n                }\n                \n                child.isLast = i == state.keys.length - 1;\n                child.isFirst = i == 0;\n                \n                if (modifiers.post) modifiers.post.call(state, child);\n                \n                path.pop();\n            });\n            parents.pop();\n        }\n        \n        if (modifiers.after) modifiers.after.call(state, state.node);\n        \n        return state;\n    })(root).node;\n}\n\nfunction copy (src) {\n    if (typeof src === 'object' && src !== null) {\n        var dst;\n        \n        if (isArray(src)) {\n            dst = [];\n        }\n        else if (isDate(src)) {\n            dst = new Date(src.getTime ? src.getTime() : src);\n        }\n        else if (isRegExp(src)) {\n            dst = new RegExp(src);\n        }\n        else if (isError(src)) {\n            dst = { message: src.message };\n        }\n        else if (isBoolean(src)) {\n            dst = new Boolean(src);\n        }\n        else if (isNumber(src)) {\n            dst = new Number(src);\n        }\n        else if (isString(src)) {\n            dst = new String(src);\n        }\n        else if (Object.create && Object.getPrototypeOf) {\n            dst = Object.create(Object.getPrototypeOf(src));\n        }\n        else if (src.constructor === Object) {\n            dst = {};\n        }\n        else {\n            var proto =\n                (src.constructor && src.constructor.prototype)\n                || src.__proto__\n                || {}\n            ;\n            var T = function () {};\n            T.prototype = proto;\n            dst = new T;\n        }\n        \n        forEach(objectKeys(src), function (key) {\n            dst[key] = src[key];\n        });\n        return dst;\n    }\n    else return src;\n}\n\nvar objectKeys = Object.keys || function keys (obj) {\n    var res = [];\n    for (var key in obj) res.push(key)\n    return res;\n};\n\nfunction toS (obj) { return Object.prototype.toString.call(obj) }\nfunction isDate (obj) { return toS(obj) === '[object Date]' }\nfunction isRegExp (obj) { return toS(obj) === '[object RegExp]' }\nfunction isError (obj) { return toS(obj) === '[object Error]' }\nfunction isBoolean (obj) { return toS(obj) === '[object Boolean]' }\nfunction isNumber (obj) { return toS(obj) === '[object Number]' }\nfunction isString (obj) { return toS(obj) === '[object String]' }\n\nvar isArray = Array.isArray || function isArray (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nforEach(objectKeys(Traverse.prototype), function (key) {\n    traverse[key] = function (obj) {\n        var args = [].slice.call(arguments, 1);\n        var t = new Traverse(obj);\n        return t[key].apply(t, args);\n    };\n});\n\nvar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\n    return key in obj;\n};\n","module.exports = Extent;\n\nfunction Extent(bbox) {\n    if (!(this instanceof Extent)) {\n        return new Extent(bbox);\n    }\n    this._bbox = bbox || [Infinity, Infinity, -Infinity, -Infinity];\n    this._valid = !!bbox;\n}\n\nExtent.prototype.include = function(ll) {\n    this._valid = true;\n    this._bbox[0] = Math.min(this._bbox[0], ll[0]);\n    this._bbox[1] = Math.min(this._bbox[1], ll[1]);\n    this._bbox[2] = Math.max(this._bbox[2], ll[0]);\n    this._bbox[3] = Math.max(this._bbox[3], ll[1]);\n    return this;\n};\n\nExtent.prototype.equals = function(_) {\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    return this._bbox[0] == other[0] &&\n        this._bbox[1] == other[1] &&\n        this._bbox[2] == other[2] &&\n        this._bbox[3] == other[3];\n};\n\nExtent.prototype.center = function(_) {\n    if (!this._valid) return null;\n    return [\n        (this._bbox[0] + this._bbox[2]) / 2,\n        (this._bbox[1] + this._bbox[3]) / 2]\n};\n\nExtent.prototype.union = function(_) {\n    this._valid = true;\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    this._bbox[0] = Math.min(this._bbox[0], other[0]);\n    this._bbox[1] = Math.min(this._bbox[1], other[1]);\n    this._bbox[2] = Math.max(this._bbox[2], other[2]);\n    this._bbox[3] = Math.max(this._bbox[3], other[3]);\n    return this;\n};\n\nExtent.prototype.bbox = function() {\n    if (!this._valid) return null;\n    return this._bbox;\n};\n\nExtent.prototype.contains = function(ll) {\n    if (!ll) return this._fastContains();\n    if (!this._valid) return null;\n    var lon = ll[0], lat = ll[1];\n    return this._bbox[0] <= lon &&\n        this._bbox[1] <= lat &&\n        this._bbox[2] >= lon &&\n        this._bbox[3] >= lat;\n};\n\nExtent.prototype.intersect = function(_) {\n    if (!this._valid) return null;\n\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n\n    return !(\n      this._bbox[0] > other[2] ||\n      this._bbox[2] < other[0] ||\n      this._bbox[3] < other[1] ||\n      this._bbox[1] > other[3]\n    );\n};\n\nExtent.prototype._fastContains = function() {\n    if (!this._valid) return new Function('return null;');\n    var body = 'return ' +\n        this._bbox[0] + '<= ll[0] &&' +\n        this._bbox[1] + '<= ll[1] &&' +\n        this._bbox[2] + '>= ll[0] &&' +\n        this._bbox[3] + '>= ll[1]';\n    return new Function('ll', body);\n};\n\nExtent.prototype.polygon = function() {\n    if (!this._valid) return null;\n    return {\n        type: 'Polygon',\n        coordinates: [\n            [\n                // W, S\n                [this._bbox[0], this._bbox[1]],\n                // E, S\n                [this._bbox[2], this._bbox[1]],\n                // E, N\n                [this._bbox[2], this._bbox[3]],\n                // W, N\n                [this._bbox[0], this._bbox[3]],\n                // W, S\n                [this._bbox[0], this._bbox[1]]\n            ]\n        ]\n    };\n};\n","var geojsonCoords = require('@mapbox/geojson-coords'),\n    traverse = require('traverse'),\n    extent = require('@mapbox/extent');\n\nvar geojsonTypesByDataAttributes = {\n    features: ['FeatureCollection'],\n    coordinates: ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'],\n    geometry: ['Feature'],\n    geometries: ['GeometryCollection']\n}\n\nvar dataAttributes = Object.keys(geojsonTypesByDataAttributes);\n\nmodule.exports = function(_) {\n    return getExtent(_).bbox();\n};\n\nmodule.exports.polygon = function(_) {\n    return getExtent(_).polygon();\n};\n\nmodule.exports.bboxify = function(_) {\n    return traverse(_).map(function(value) {\n        if (!value) return ;\n\n        var isValid = dataAttributes.some(function(attribute){\n            if(value[attribute]) {\n                return geojsonTypesByDataAttributes[attribute].indexOf(value.type) !== -1;\n            }\n            return false;\n        });\n\n        if(isValid){\n            value.bbox = getExtent(value).bbox();\n            this.update(value);\n        }\n\n    });\n};\n\nfunction getExtent(_) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity],\n        ext = extent(),\n        coords = geojsonCoords(_);\n    for (var i = 0; i < coords.length; i++) ext.include(coords[i]);\n    return ext;\n}\n","import extent from '@mapbox/geojson-extent';\nimport * as Constants from '../constants';\n\nconst {\n  LAT_MIN,\n  LAT_MAX,\n  LAT_RENDERED_MIN,\n  LAT_RENDERED_MAX,\n  LNG_MIN,\n  LNG_MAX\n} = Constants;\n\n// Ensure that we do not drag north-south far enough for\n// - any part of any feature to exceed the poles\n// - any feature to be completely lost in the space between the projection's\n//   edge and the poles, such that it couldn't be re-selected and moved back\nexport default function(geojsonFeatures, delta) {\n  // \"inner edge\" = a feature's latitude closest to the equator\n  let northInnerEdge = LAT_MIN;\n  let southInnerEdge = LAT_MAX;\n  // \"outer edge\" = a feature's latitude furthest from the equator\n  let northOuterEdge = LAT_MIN;\n  let southOuterEdge = LAT_MAX;\n\n  let westEdge = LNG_MAX;\n  let eastEdge = LNG_MIN;\n\n  geojsonFeatures.forEach((feature) => {\n    const bounds = extent(feature);\n    const featureSouthEdge = bounds[1];\n    const featureNorthEdge = bounds[3];\n    const featureWestEdge = bounds[0];\n    const featureEastEdge = bounds[2];\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\n  });\n\n\n  // These changes are not mutually exclusive: we might hit the inner\n  // edge but also have hit the outer edge and therefore need\n  // another readjustment\n  const constrainedDelta = delta;\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\n  }\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\n  }\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\n  }\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\n  }\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n\n  return constrainedDelta;\n}\n","import constrainFeatureMovement from './constrain_feature_movement';\nimport * as Constants from '../constants';\n\nexport default function(features, delta) {\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\n\n  features.forEach((feature) => {\n    const currentCoordinates = feature.getCoordinates();\n\n    const moveCoordinate = (coord) => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\n\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n\n    feature.incomingCoords(nextCoordinates);\n  });\n}\n","import * as CommonSelectors from '../lib/common_selectors';\nimport mouseEventPoint from '../lib/mouse_event_point';\nimport createSupplementaryPoints from '../lib/create_supplementary_points';\nimport StringSet from '../lib/string_set';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport moveFeatures from '../lib/move_features';\nimport * as Constants from '../constants';\n\nconst SimpleSelect = {};\n\nSimpleSelect.onSetup = function(opts) {\n  // turn the opts into state.\n  const state = {\n    dragMoveLocation: null,\n    boxSelectStartLocation: null,\n    boxSelectElement: undefined,\n    boxSelecting: false,\n    canBoxSelect: false,\n    dragMoving: false,\n    canDragMove: false,\n    initiallySelectedFeatureIds: opts.featureIds || []\n  };\n\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\n  this.fireActionable();\n\n  this.setActionableState({\n    combineFeatures: true,\n    uncombineFeatures: true,\n    trash: true\n  });\n\n  return state;\n};\n\nSimpleSelect.fireUpdate = function() {\n  this.map.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.MOVE,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nSimpleSelect.fireActionable = function() {\n  const selectedFeatures = this.getSelected();\n\n  const multiFeatures = selectedFeatures.filter(\n    feature => this.isInstanceOf('MultiFeature', feature)\n  );\n\n  let combineFeatures = false;\n\n  if (selectedFeatures.length > 1) {\n    combineFeatures = true;\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\n    selectedFeatures.forEach((feature) => {\n      if (feature.type.replace('Multi', '') !== featureType) {\n        combineFeatures = false;\n      }\n    });\n  }\n\n  const uncombineFeatures = multiFeatures.length > 0;\n  const trash = selectedFeatures.length > 0;\n\n  this.setActionableState({\n    combineFeatures, uncombineFeatures, trash\n  });\n};\n\nSimpleSelect.getUniqueIds = function(allFeatures) {\n  if (!allFeatures.length) return [];\n  const ids = allFeatures.map(s => s.properties.id)\n    .filter(id => id !== undefined)\n    .reduce((memo, id) => {\n      memo.add(id);\n      return memo;\n    }, new StringSet());\n\n  return ids.values();\n};\n\nSimpleSelect.stopExtendedInteractions = function(state) {\n  if (state.boxSelectElement) {\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\n    state.boxSelectElement = null;\n  }\n\n  this.map.dragPan.enable();\n\n  state.boxSelecting = false;\n  state.canBoxSelect = false;\n  state.dragMoving = false;\n  state.canDragMove = false;\n};\n\nSimpleSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n};\n\nSimpleSelect.onMouseMove = function(state) {\n  // On mousemove that is not a drag, stop extended interactions.\n  // This is useful if you drag off the canvas, release the button,\n  // then move the mouse back over the canvas --- we don't allow the\n  // interaction to continue then, but we do let it continue if you held\n  // the mouse button that whole time\n  return this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) return this.fireUpdate();\n};\n\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\n  // Click (with or without shift) on no feature\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\n};\n\nSimpleSelect.clickAnywhere = function (state) {\n  // Clear the re-render selection\n  const wasSelected = this.getSelectedIds();\n  if (wasSelected.length) {\n    this.clearSelectedFeatures();\n    wasSelected.forEach(id => this.doRender(id));\n  }\n  doubleClickZoom.enable(this);\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.clickOnVertex = function(state, e) {\n  // Enter direct select mode\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\n    featureId: e.featureTarget.properties.parent,\n    coordPath: e.featureTarget.properties.coord_path,\n    startPos: e.lngLat\n  });\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n};\n\nSimpleSelect.startOnActiveFeature = function(state, e) {\n  // Stop any already-underway extended interactions\n  this.stopExtendedInteractions(state);\n\n  // Disable map.dragPan immediately so it can't start\n  this.map.dragPan.disable();\n\n  // Re-render it and enable drag move\n  this.doRender(e.featureTarget.properties.id);\n\n  // Set up the state for drag moving\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.clickOnFeature = function(state, e) {\n  // Stop everything\n  doubleClickZoom.disable(this);\n  this.stopExtendedInteractions(state);\n\n  const isShiftClick = CommonSelectors.isShiftDown(e);\n  const selectedFeatureIds = this.getSelectedIds();\n  const featureId = e.featureTarget.properties.id;\n  const isFeatureSelected = this.isSelected(featureId);\n\n  // Click (without shift) on any selected feature but a point\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\n    // Enter direct select mode\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\n      featureId\n    });\n  }\n\n  // Shift-click on a selected feature\n  if (isFeatureSelected && isShiftClick) {\n    // Deselect it\n    this.deselect(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n    if (selectedFeatureIds.length === 1) {\n      doubleClickZoom.enable(this);\n    }\n  // Shift-click on an unselected feature\n  } else if (!isFeatureSelected && isShiftClick) {\n    // Add it to the selection\n    this.select(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  // Click (without shift) on an unselected feature\n  } else if (!isFeatureSelected && !isShiftClick) {\n    // Make it the only selected feature\n    selectedFeatureIds.forEach(id => this.doRender(id));\n    this.setSelected(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  }\n\n  // No matter what, re-render the clicked feature\n  this.doRender(featureId);\n};\n\nSimpleSelect.onMouseDown = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\n};\n\nSimpleSelect.startBoxSelect = function(state, e) {\n  this.stopExtendedInteractions(state);\n  this.map.dragPan.disable();\n  // Enable box select\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  state.canBoxSelect = true;\n};\n\nSimpleSelect.onTouchStart = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n};\n\nSimpleSelect.onDrag = function(state, e) {\n  if (state.canDragMove) return this.dragMove(state, e);\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\n};\n\nSimpleSelect.whileBoxSelect = function(state, e) {\n  state.boxSelecting = true;\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n\n  // Create the box node if it doesn't exist\n  if (!state.boxSelectElement) {\n    state.boxSelectElement = document.createElement('div');\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n    this.map.getContainer().appendChild(state.boxSelectElement);\n  }\n\n  // Adjust the box node's width and xy position\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\n  const translateValue = `translate(${minX}px, ${minY}px)`;\n  state.boxSelectElement.style.transform = translateValue;\n  state.boxSelectElement.style.WebkitTransform = translateValue;\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\n};\n\nSimpleSelect.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.onMouseUp = function(state, e) {\n  // End any extended interactions\n  if (state.dragMoving) {\n    this.fireUpdate();\n  } else if (state.boxSelecting) {\n    const bbox = [\n      state.boxSelectStartLocation,\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\n    ];\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\n    const idsToSelect = this.getUniqueIds(featuresInBox)\n      .filter(id => !this.isSelected(id));\n\n    if (idsToSelect.length) {\n      this.select(idsToSelect);\n      idsToSelect.forEach(id => this.doRender(id));\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n    }\n  }\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  createSupplementaryPoints(geojson).forEach(display);\n};\n\nSimpleSelect.onTrash = function() {\n  this.deleteFeature(this.getSelectedIds());\n  this.fireActionable();\n};\n\nSimpleSelect.onCombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n\n  const coordinates = [], featuresCombined = [];\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (feature.type.replace('Multi', '') !== featureType) {\n      return;\n    }\n    if (feature.type.includes('Multi')) {\n      feature.getCoordinates().forEach((subcoords) => {\n        coordinates.push(subcoords);\n      });\n    } else {\n      coordinates.push(feature.getCoordinates());\n    }\n\n    featuresCombined.push(feature.toGeoJSON());\n  }\n\n  if (featuresCombined.length > 1) {\n    const multiFeature = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: featuresCombined[0].properties,\n      geometry: {\n        type: `Multi${featureType}`,\n        coordinates\n      }\n    });\n\n    this.addFeature(multiFeature);\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\n    this.setSelected([multiFeature.id]);\n\n    this.map.fire(Constants.events.COMBINE_FEATURES, {\n      createdFeatures: [multiFeature.toGeoJSON()],\n      deletedFeatures: featuresCombined\n    });\n  }\n  this.fireActionable();\n};\n\nSimpleSelect.onUncombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0) return;\n\n  const createdFeatures = [];\n  const featuresUncombined = [];\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (this.isInstanceOf('MultiFeature', feature)) {\n      feature.getFeatures().forEach((subFeature) => {\n        this.addFeature(subFeature);\n        subFeature.properties = feature.properties;\n        createdFeatures.push(subFeature.toGeoJSON());\n        this.select([subFeature.id]);\n      });\n      this.deleteFeature(feature.id, { silent: true });\n      featuresUncombined.push(feature.toGeoJSON());\n    }\n  }\n\n  if (createdFeatures.length > 1) {\n    this.map.fire(Constants.events.UNCOMBINE_FEATURES, {\n      createdFeatures,\n      deletedFeatures: featuresUncombined\n    });\n  }\n  this.fireActionable();\n};\n\nexport default SimpleSelect;\n","import {noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown} from '../lib/common_selectors';\nimport createSupplementaryPoints from '../lib/create_supplementary_points';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport moveFeatures from '../lib/move_features';\n\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\n\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function() {\n  this.map.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nDirectSelect.fireActionable = function(state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\n\nDirectSelect.startDragging = function(state, e) {\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.stopDragging = function(state) {\n  this.map.dragPan.enable();\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\n\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\n\nDirectSelect.onMidpoint = function(state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\n\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\n};\n\nDirectSelect.onFeature = function(state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\n  else this.stopDragging(state);\n};\n\nDirectSelect.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.dragVertex = function(state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\n\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function(opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : []\n  };\n\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return state;\n};\n\nDirectSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\n\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\n\nDirectSelect.onTrash = function(state) {\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n  // in reverse order so that we can remove by index safely.\n  state.selectedCoordPaths\n    .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\n    .forEach(id => state.feature.removeCoordinate(id));\n  this.fireUpdate();\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  this.fireActionable(state);\n  if (state.feature.isValid() === false) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  }\n};\n\nDirectSelect.onMouseMove = function(state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  this.stopDragging(state);\n};\n\nDirectSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n};\n\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\n\nDirectSelect.onDrag = function(state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\n  else this.dragFeature(state, e, delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.onClick = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\n\nDirectSelect.onTap = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\n\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\n\nexport default DirectSelect;\n\n","import * as CommonSelectors from '../lib/common_selectors';\nimport * as Constants from '../constants';\n\nconst DrawPoint = {};\n\nDrawPoint.onSetup = function() {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n\n  this.addFeature(point);\n\n  this.clearSelectedFeatures();\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POINT);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return { point };\n};\n\nDrawPoint.stopDrawingAndRemove = function(state) {\n  this.deleteFeature([state.point.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.map.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\n};\n\nDrawPoint.onStop = function(state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], { silent: true });\n  }\n};\n\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\n\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\n\nDrawPoint.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\n\nexport default DrawPoint;\n","function isEventAtCoordinates(event, coordinates) {\n  if (!event.lngLat) return false;\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\n}\n\nexport default isEventAtCoordinates;\n","import * as CommonSelectors from '../lib/common_selectors';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates';\nimport createVertex from '../lib/create_vertex';\n\nconst DrawPolygon = {};\n\nDrawPolygon.onSetup = function() {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nDrawPolygon.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  state.currentVertexPosition++;\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n};\n\nDrawPolygon.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nDrawPolygon.onMouseMove = function(state, e) {\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawPolygon.onTap = DrawPolygon.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  return this.clickAnywhere(state, e);\n};\n\nDrawPolygon.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  } else if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n};\n\nDrawPolygon.onStop = function(state) {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.polygon.id) === undefined) return;\n\n  //remove last added coordinate\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\n  if (state.polygon.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.polygon.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawPolygon.toDisplayFeatures = function(state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePolygon) return display(geojson);\n\n  // Don't render a polygon until it has two positions\n  // (and a 3rd which is just the first repeated)\n  if (geojson.geometry.coordinates.length === 0) return;\n\n  const coordinateCount = geojson.geometry.coordinates[0].length;\n  // 2 coordinates after selecting a draw type\n  // 3 after creating the first point\n  if (coordinateCount < 3) {\n    return;\n  }\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\n  if (coordinateCount > 3) {\n    // Add a start position marker to the map, clicking on this will finish the feature\n    // This should only be shown when we're in a valid spot\n    const endPos = geojson.geometry.coordinates[0].length - 3;\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\n  }\n  if (coordinateCount <= 4) {\n    // If we've only drawn two positions (plus the closer),\n    // make a LineString instead of a Polygon\n    const lineCoordinates = [\n      [geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]\n    ];\n    // create an initial vertex so that we can track the first point on mobile devices\n    display({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: geojson.properties,\n      geometry: {\n        coordinates: lineCoordinates,\n        type: Constants.geojsonTypes.LINE_STRING\n      }\n    });\n    if (coordinateCount === 3) {\n      return;\n    }\n  }\n  // render the Polygon\n  return display(geojson);\n};\n\nDrawPolygon.onTrash = function(state) {\n  this.deleteFeature([state.polygon.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nexport default DrawPolygon;\n","import * as CommonSelectors from '../lib/common_selectors';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport createVertex from '../lib/create_vertex';\n\nconst DrawLineString = {};\n\nDrawLineString.onSetup = function(opts) {\n  opts = opts || {};\n  const featureId = opts.featureId;\n\n  let line, currentVertexPosition;\n  let direction = 'forward';\n  if (featureId) {\n    line = this.getFeature(featureId);\n    if (!line) {\n      throw new Error('Could not find a feature with the provided featureId');\n    }\n    let from = opts.from;\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\n      from = from.geometry;\n    }\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\n      from = from.coordinates;\n    }\n    if (!from || !Array.isArray(from)) {\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\n    }\n    const lastCoord = line.coordinates.length - 1;\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\n      currentVertexPosition = lastCoord + 1;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\n      direction = 'backwards';\n      currentVertexPosition = 0;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\n    } else {\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\n    }\n  } else {\n    line = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.LINE_STRING,\n        coordinates: []\n      }\n    });\n    currentVertexPosition = 0;\n    this.addFeature(line);\n  }\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.LINE);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    line,\n    currentVertexPosition,\n    direction\n  };\n};\n\nDrawLineString.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (state.direction === 'forward') {\n    state.currentVertexPosition++;\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  } else {\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n  }\n};\n\nDrawLineString.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n};\n\nDrawLineString.onMouseMove = function(state, e) {\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  this.clickAnywhere(state, e);\n};\n\nDrawLineString.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  } else if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  }\n};\n\nDrawLineString.onStop = function(state) {\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.line.id) === undefined) return;\n\n  //remove last added coordinate\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\n  if (state.line.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.line.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawLineString.onTrash = function(state) {\n  this.deleteFeature([state.line.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\n  const isActiveLine = geojson.properties.id === state.line.id;\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActiveLine) return display(geojson);\n  // Only render the line if it has at least one real coordinate\n  if (geojson.geometry.coordinates.length < 2) return;\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(\n    state.line.id,\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\n    false\n  ));\n\n  display(geojson);\n};\n\nexport default DrawLineString;\n","\nimport simple_select from './simple_select';\nimport direct_select from './direct_select';\nimport draw_point from './draw_point';\nimport draw_polygon from './draw_polygon';\nimport draw_line_string from './draw_line_string';\n\nexport default {\n  simple_select,\n  direct_select,\n  draw_point,\n  draw_polygon,\n  draw_line_string,\n};\n","import xtend from 'xtend';\nimport * as Constants from './constants';\n\nimport styles from './lib/theme';\nimport modes from './modes/index';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return xtend(style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: (sourceBucket === 'hot') ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = xtend(options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = xtend(hideControls, options.controls);\n  } else {\n    withDefaults.controls = xtend(showControls, options.controls);\n  }\n\n  withDefaults = xtend(defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n\n  return withDefaults;\n}\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","export default function(a, b) {\n  if (a.length !== b.length) return false;\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar jsonlint = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b');\n        \nbreak;\ncase 2:\nthis.$ = Number(yytext);\nbreak;\ncase 3:\nthis.$ = null;\nbreak;\ncase 4:\nthis.$ = true;\nbreak;\ncase 5:\nthis.$ = false;\nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\n\n            this.$ = $$[$0-2];\n            if ($$[$0-2][$$[$0][0]] !== undefined) {\n                if (!this.$.__duplicateProperties__) {\n                    Object.defineProperty(this.$, '__duplicateProperties__', {\n                        value: [],\n                        enumerable: false\n                    });\n                }\n                this.$.__duplicateProperties__.push($$[$0][0]);\n            }\n            $$[$0-2][$$[$0][0]] = $$[$0][1];\n        \nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt\\/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = jsonlint;\nexports.Parser = jsonlint.Parser;\nexports.parse = function () { return jsonlint.parse.apply(jsonlint, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","function rad(x) {\n    return x * Math.PI / 180;\n}\n\nfunction isRingClockwise (coords) {\n    var area = 0;\n    if (coords.length > 2) {\n        var p1, p2;\n        for (var i = 0; i < coords.length - 1; i++) {\n            p1 = coords[i];\n            p2 = coords[i + 1];\n            area += rad(p2[0] - p1[0]) * (2 + Math.sin(rad(p1[1])) + Math.sin(rad(p2[1])));\n        }\n    }\n\n    return area >= 0;\n}\n\nfunction isPolyRHR (coords) {\n    if (coords && coords.length > 0) {\n        if (isRingClockwise(coords[0]))\n            return false;\n        var interiorCoords = coords.slice(1, coords.length);\n        if (!interiorCoords.every(isRingClockwise))\n            return false;\n    }\n    return true;\n}\n\nfunction rightHandRule (geometry) {\n    if (geometry.type === 'Polygon') {\n        return isPolyRHR(geometry.coordinates);\n    } else if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.every(isPolyRHR);\n    }\n}\n\nmodule.exports = function validateRightHandRule(geometry, errors) {\n    if (!rightHandRule(geometry)) {\n        errors.push({\n            message: 'Polygons and MultiPolygons should follow the right-hand rule',\n            level: 'message',\n            line: geometry.__line__\n        });\n    }\n};\n","var rightHandRule = require('./rhr');\n\n/**\n * @alias geojsonhint\n * @param {(string|object)} GeoJSON given as a string or as an object\n * @param {Object} options\n * @param {boolean} [options.noDuplicateMembers=true] forbid repeated\n * properties. This is only available for string input, becaused parsed\n * Objects cannot have duplicate properties.\n * @param {boolean} [options.precisionWarning=true] warn if GeoJSON contains\n * unnecessary coordinate precision.\n * @returns {Array<Object>} an array of errors\n */\nfunction hint(gj, options) {\n\n    var errors = [];\n    var precisionWarningCount = 0;\n    var maxPrecisionWarnings = 10;\n    var maxPrecision = 6;\n\n    function root(_) {\n\n        if ((!options || options.noDuplicateMembers !== false) &&\n           _.__duplicateProperties__) {\n            errors.push({\n                message: 'An object contained duplicate members, making parsing ambigous: ' + _.__duplicateProperties__.join(', '),\n                line: _.__line__\n            });\n        }\n\n        if (requiredProperty(_, 'type', 'string')) {\n            return;\n        }\n\n        if (!types[_.type]) {\n            var expectedType = typesLower[_.type.toLowerCase()];\n            if (expectedType !== undefined) {\n                errors.push({\n                    message: 'Expected ' + expectedType + ' but got ' + _.type + ' (case sensitive)',\n                    line: _.__line__\n                });\n            } else {\n                errors.push({\n                    message: 'The type ' + _.type + ' is unknown',\n                    line: _.__line__\n                });\n            }\n        } else if (_) {\n            types[_.type](_);\n        }\n    }\n\n    function everyIs(_, type) {\n        // make a single exception because typeof null === 'object'\n        return _.every(function(x) {\n            return x !== null && typeof x === type;\n        });\n    }\n\n    function requiredProperty(_, name, type) {\n        if (typeof _[name] === 'undefined') {\n            return errors.push({\n                message: '\"' + name + '\" member required',\n                line: _.__line__\n            });\n        } else if (type === 'array') {\n            if (!Array.isArray(_[name])) {\n                return errors.push({\n                    message: '\"' + name +\n                        '\" member should be an array, but is an ' +\n                        (typeof _[name]) + ' instead',\n                    line: _.__line__\n                });\n            }\n        } else if (type === 'object' && _[name] && _[name].constructor !== Object) {\n            return errors.push({\n                message: '\"' + name +\n                    '\" member should be ' + (type) +\n                    ', but is an ' + (_[name].constructor.name) + ' instead',\n                line: _.__line__\n            });\n        } else if (type && typeof _[name] !== type) {\n            return errors.push({\n                message: '\"' + name +\n                    '\" member should be ' + (type) +\n                    ', but is an ' + (typeof _[name]) + ' instead',\n                line: _.__line__\n            });\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.3\n    function FeatureCollection(featureCollection) {\n        crs(featureCollection);\n        bbox(featureCollection);\n        if (featureCollection.properties !== undefined) {\n            errors.push({\n                message: 'FeatureCollection object cannot contain a \"properties\" member',\n                line: featureCollection.__line__\n            });\n        }\n        if (featureCollection.coordinates !== undefined) {\n            errors.push({\n                message: 'FeatureCollection object cannot contain a \"coordinates\" member',\n                line: featureCollection.__line__\n            });\n        }\n        if (!requiredProperty(featureCollection, 'features', 'array')) {\n            if (!everyIs(featureCollection.features, 'object')) {\n                return errors.push({\n                    message: 'Every feature must be an object',\n                    line: featureCollection.__line__\n                });\n            }\n            featureCollection.features.forEach(Feature);\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.1\n    function position(_, line) {\n        if (!Array.isArray(_)) {\n            return errors.push({\n                message: 'position should be an array, is a ' + (typeof _) +\n                    ' instead',\n                line: _.__line__ || line\n            });\n        }\n        if (_.length < 2) {\n            return errors.push({\n                message: 'position must have 2 or more elements',\n                line: _.__line__ || line\n            });\n        }\n        if (_.length > 3) {\n            return errors.push({\n                message: 'position should not have more than 3 elements',\n                level: 'message',\n                line: _.__line__ || line\n            });\n        }\n        if (!everyIs(_, 'number')) {\n            return errors.push({\n                message: 'each element in a position must be a number',\n                line: _.__line__ || line\n            });\n        }\n\n        if (options && options.precisionWarning) {\n            if (precisionWarningCount === maxPrecisionWarnings) {\n                precisionWarningCount += 1;\n                return errors.push({\n                    message: 'truncated warnings: we\\'ve encountered coordinate precision warning ' + maxPrecisionWarnings + ' times, no more warnings will be reported',\n                    level: 'message',\n                    line: _.__line__ || line\n                });\n            } else if (precisionWarningCount < maxPrecisionWarnings) {\n                _.forEach(function(num) {\n                    var precision = 0;\n                    var decimalStr = String(num).split('.')[1];\n                    if (decimalStr !== undefined)\n                        precision = decimalStr.length;\n                    if (precision > maxPrecision) {\n                        precisionWarningCount += 1;\n                        return errors.push({\n                            message: 'precision of coordinates should be reduced',\n                            level: 'message',\n                            line: _.__line__ || line\n                        });\n                    }\n                });\n            }\n        }\n    }\n\n    function positionArray(coords, type, depth, line) {\n        if (line === undefined && coords.__line__ !== undefined) {\n            line = coords.__line__;\n        }\n        if (depth === 0) {\n            return position(coords, line);\n        }\n        if (depth === 1 && type) {\n            if (type === 'LinearRing') {\n                if (!Array.isArray(coords[coords.length - 1])) {\n                    errors.push({\n                        message: 'a number was found where a coordinate array should have been found: this needs to be nested more deeply',\n                        line: line\n                    });\n                    return true;\n                }\n                if (coords.length < 4) {\n                    errors.push({\n                        message: 'a LinearRing of coordinates needs to have four or more positions',\n                        line: line\n                    });\n                }\n                if (coords.length &&\n                    (coords[coords.length - 1].length !== coords[0].length ||\n                    !coords[coords.length - 1].every(function(pos, index) {\n                        return coords[0][index] === pos;\n                }))) {\n                    errors.push({\n                        message: 'the first and last positions in a LinearRing of coordinates must be the same',\n                        line: line\n                    });\n                    return true;\n                }\n            } else if (type === 'Line' && coords.length < 2) {\n                return errors.push({\n                    message: 'a line needs to have two or more coordinates to be valid',\n                    line: line\n                });\n            }\n        }\n        if (!Array.isArray(coords)) {\n            errors.push({\n                message: 'a number was found where a coordinate array should have been found: this needs to be nested more deeply',\n                line: line\n            });\n        } else {\n            var results = coords.map(function(c) {\n                return positionArray(c, type, depth - 1, c.__line__ || line);\n            });\n            return results.some(function(r) {\n                return r;\n            });\n        }\n    }\n\n    function crs(_) {\n        if (!_.crs) return;\n        var defaultCRSName = 'urn:ogc:def:crs:OGC:1.3:CRS84';\n        if (typeof _.crs === 'object' && _.crs.properties && _.crs.properties.name === defaultCRSName) {\n            errors.push({\n                message: 'old-style crs member is not recommended, this object is equivalent to the default and should be removed',\n                line: _.__line__\n            });\n        } else {\n            errors.push({\n                message: 'old-style crs member is not recommended',\n                line: _.__line__\n            });\n        }\n    }\n\n    function bbox(_) {\n        if (!_.bbox) {\n            return;\n        }\n        if (Array.isArray(_.bbox)) {\n            if (!everyIs(_.bbox, 'number')) {\n                errors.push({\n                    message: 'each element in a bbox member must be a number',\n                    line: _.bbox.__line__\n                });\n            }\n            if (!(_.bbox.length === 4 || _.bbox.length === 6)) {\n                errors.push({\n                    message: 'bbox must contain 4 elements (for 2D) or 6 elements (for 3D)',\n                    line: _.bbox.__line__\n                });\n            }\n            return errors.length;\n        }\n        errors.push({\n            message: 'bbox member must be an array of numbers, but is a ' + (typeof _.bbox),\n            line: _.__line__\n        });\n    }\n\n    function geometrySemantics(geom) {\n        if (geom.properties !== undefined) {\n            errors.push({\n                message: 'geometry object cannot contain a \"properties\" member',\n                line: geom.__line__\n            });\n        }\n        if (geom.geometry !== undefined) {\n            errors.push({\n                message: 'geometry object cannot contain a \"geometry\" member',\n                line: geom.__line__\n            });\n        }\n        if (geom.features !== undefined) {\n            errors.push({\n                message: 'geometry object cannot contain a \"features\" member',\n                line: geom.__line__\n            });\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.2\n    function Point(point) {\n        crs(point);\n        bbox(point);\n        geometrySemantics(point);\n        if (!requiredProperty(point, 'coordinates', 'array')) {\n            position(point.coordinates);\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.6\n    function Polygon(polygon) {\n        crs(polygon);\n        bbox(polygon);\n        if (!requiredProperty(polygon, 'coordinates', 'array')) {\n            if (!positionArray(polygon.coordinates, 'LinearRing', 2)) {\n                rightHandRule(polygon, errors);\n            }\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.7\n    function MultiPolygon(multiPolygon) {\n        crs(multiPolygon);\n        bbox(multiPolygon);\n        if (!requiredProperty(multiPolygon, 'coordinates', 'array')) {\n            if (!positionArray(multiPolygon.coordinates, 'LinearRing', 3)) {\n                rightHandRule(multiPolygon, errors);\n            }\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.4\n    function LineString(lineString) {\n        crs(lineString);\n        bbox(lineString);\n        if (!requiredProperty(lineString, 'coordinates', 'array')) {\n            positionArray(lineString.coordinates, 'Line', 1);\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.5\n    function MultiLineString(multiLineString) {\n        crs(multiLineString);\n        bbox(multiLineString);\n        if (!requiredProperty(multiLineString, 'coordinates', 'array')) {\n            positionArray(multiLineString.coordinates, 'Line', 2);\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.3\n    function MultiPoint(multiPoint) {\n        crs(multiPoint);\n        bbox(multiPoint);\n        if (!requiredProperty(multiPoint, 'coordinates', 'array')) {\n            positionArray(multiPoint.coordinates, '', 1);\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.1.8\n    function GeometryCollection(geometryCollection) {\n        crs(geometryCollection);\n        bbox(geometryCollection);\n        if (!requiredProperty(geometryCollection, 'geometries', 'array')) {\n            if (!everyIs(geometryCollection.geometries, 'object')) {\n                errors.push({\n                    message: 'The geometries array in a GeometryCollection must contain only geometry objects',\n                    line: geometryCollection.__line__\n                });\n            }\n            if (geometryCollection.geometries.length === 1) {\n                errors.push({\n                    message: 'GeometryCollection with a single geometry should be avoided in favor of single part or a single object of multi-part type',\n                    line: geometryCollection.geometries.__line__\n                });\n            }\n            geometryCollection.geometries.forEach(function(geometry) {\n                if (geometry) {\n                    if (geometry.type === 'GeometryCollection') {\n                        errors.push({\n                            message: 'GeometryCollection should avoid nested geometry collections',\n                            line: geometryCollection.geometries.__line__\n                        });\n                    }\n                    root(geometry);\n                }\n            });\n        }\n    }\n\n    // https://tools.ietf.org/html/rfc7946#section-3.2\n    function Feature(feature) {\n        crs(feature);\n        bbox(feature);\n        // https://github.com/geojson/draft-geojson/blob/master/middle.mkd#feature-object\n        if (feature.id !== undefined &&\n            typeof feature.id !== 'string' &&\n            typeof feature.id !== 'number') {\n            errors.push({\n                message: 'Feature \"id\" member must have a string or number value',\n                line: feature.__line__\n            });\n        }\n        if (feature.features !== undefined) {\n            errors.push({\n                message: 'Feature object cannot contain a \"features\" member',\n                line: feature.__line__\n            });\n        }\n        if (feature.coordinates !== undefined) {\n            errors.push({\n                message: 'Feature object cannot contain a \"coordinates\" member',\n                line: feature.__line__\n            });\n        }\n        if (feature.type !== 'Feature') {\n            errors.push({\n                message: 'GeoJSON features must have a type=feature member',\n                line: feature.__line__\n            });\n        }\n        requiredProperty(feature, 'properties', 'object');\n        if (!requiredProperty(feature, 'geometry', 'object')) {\n            // https://tools.ietf.org/html/rfc7946#section-3.2\n            // tolerate null geometry\n            if (feature.geometry) root(feature.geometry);\n        }\n    }\n\n    var types = {\n        Point: Point,\n        Feature: Feature,\n        MultiPoint: MultiPoint,\n        LineString: LineString,\n        MultiLineString: MultiLineString,\n        FeatureCollection: FeatureCollection,\n        GeometryCollection: GeometryCollection,\n        Polygon: Polygon,\n        MultiPolygon: MultiPolygon\n    };\n\n    var typesLower = Object.keys(types).reduce(function(prev, curr) {\n        prev[curr.toLowerCase()] = curr;\n        return prev;\n    }, {});\n\n    if (typeof gj !== 'object' ||\n        gj === null ||\n        gj === undefined) {\n        errors.push({\n            message: 'The root of a GeoJSON object must be an object.',\n            line: 0\n        });\n        return errors;\n    }\n\n    root(gj);\n\n    errors.forEach(function(err) {\n        if ({}.hasOwnProperty.call(err, 'line') && err.line === undefined) {\n            delete err.line;\n        }\n    });\n\n    return errors;\n}\n\nmodule.exports.hint = hint;\n","var jsonlint = require('jsonlint-lines'),\n  geojsonHintObject = require('./object');\n\n/**\n * @alias geojsonhint\n * @param {(string|object)} GeoJSON given as a string or as an object\n * @param {Object} options\n * @param {boolean} [options.noDuplicateMembers=true] forbid repeated\n * properties. This is only available for string input, becaused parsed\n * Objects cannot have duplicate properties.\n * @param {boolean} [options.precisionWarning=true] warn if GeoJSON contains\n * unnecessary coordinate precision.\n * @returns {Array<Object>} an array of errors\n */\nfunction hint(str, options) {\n\n    var gj, errors = [];\n\n    if (typeof str === 'object') {\n        gj = str;\n    } else if (typeof str === 'string') {\n        try {\n            gj = jsonlint.parse(str);\n        } catch(e) {\n            var match = e.message.match(/line (\\d+)/);\n            var lineNumber = parseInt(match[1], 10);\n            return [{\n                line: lineNumber - 1,\n                message: e.message,\n                error: e\n            }];\n        }\n    } else {\n        return [{\n            message: 'Expected string or object as input',\n            line: 0\n        }];\n    }\n\n    errors = errors.concat(geojsonHintObject.hint(gj, options));\n\n    return errors;\n}\n\nmodule.exports.hint = hint;\n","import isEqual from 'lodash.isequal';\nimport normalize from '@mapbox/geojson-normalize';\nimport hat from 'hat';\nimport featuresAt from './lib/features_at';\nimport stringSetsAreEqual from './lib/string_sets_are_equal';\nimport geojsonhint from '@mapbox/geojsonhint';\nimport * as Constants from './constants';\nimport StringSet from './lib/string_set';\n\nimport Polygon from './feature_types/polygon';\nimport LineString from './feature_types/line_string';\nimport Point from './feature_types/point';\nimport MultiFeature from './feature_types/multi_feature';\n\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\n\nexport default function(ctx, api) {\n\n  api.modes = Constants.modes;\n\n  api.getFeatureIdsAt = function(point) {\n    const features = featuresAt.click({ point }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n\n  api.getSelectedIds = function () {\n    return ctx.store.getSelectedIds();\n  };\n\n  api.getSelected = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.getSelectedPoints = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n\n  api.set = function(featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n\n    renderBatch();\n    return newIds;\n  };\n\n  api.add = function (geojson) {\n    const errors = geojsonhint.hint(geojson, { precisionWarning: false }).filter(e => e.level !== 'message');\n    if (errors.length) {\n      throw new Error(errors[0].message);\n    }\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n\n    const ids = featureCollection.features.map((feature) => {\n      feature.id = feature.id || hat();\n\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature);\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        internalFeature.properties = feature.properties;\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n\n    ctx.store.render();\n    return ids;\n  };\n\n\n  api.get = function (id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n\n  api.getAll = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.delete = function(featureIds) {\n    ctx.store.delete(featureIds, { silent: true });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent: true });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.deleteAll = function() {\n    ctx.store.delete(ctx.store.getAllIds(), { silent: true });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent: true });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.changeMode = function(mode, modeOptions = {}) {\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual((modeOptions.featureIds || []), ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, { silent: true });\n      ctx.store.render();\n      return api;\n    }\n\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT &&\n      modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n\n    ctx.events.changeMode(mode, modeOptions, { silent: true });\n    return api;\n  };\n\n  api.getMode = function() {\n    return ctx.events.getMode();\n  };\n\n  api.trash = function() {\n    ctx.events.trash({ silent: true });\n    return api;\n  };\n\n  api.combineFeatures = function() {\n    ctx.events.combineFeatures({ silent: true });\n    return api;\n  };\n\n  api.uncombineFeatures = function() {\n    ctx.events.uncombineFeatures({ silent: true });\n    return api;\n  };\n\n  api.setFeatureProperty = function(featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value);\n    return api;\n  };\n\n  return api;\n}\n","import runSetup from './src/setup';\nimport setupOptions from './src/options';\nimport setupAPI from './src/api';\nimport * as Constants from './src/constants';\n\nconst setupDraw = function(options, api) {\n  options = setupOptions(options);\n\n  const ctx = {\n    options\n  };\n\n  api = setupAPI(ctx, api);\n  ctx.api = api;\n\n  const setup = runSetup(ctx);\n\n  api.onAdd = setup.onAdd;\n  api.onRemove = setup.onRemove;\n  api.types = Constants.types;\n  api.options = options;\n\n  return api;\n};\n\nfunction MapboxDraw(options) {\n  setupDraw(options, this);\n}\n\nimport modes from './src/modes/index';\nMapboxDraw.modes = modes;\n\nexport default MapboxDraw;\n","export const Constants = {\n  classes: {\n    CONTROL_BASE: \"mapboxgl-ctrl\",\n    CONTROL_PREFIX: \"mapboxgl-ctrl-\",\n    CONTROL_BUTTON: \"mapbox-gl-draw_ctrl-draw-btn\",\n    CONTROL_BUTTON_LINE: \"mapbox-gl-draw_line\",\n    CONTROL_BUTTON_POLYGON: \"mapbox-gl-draw_polygon\",\n    CONTROL_BUTTON_POINT: \"mapbox-gl-draw_point\",\n    CONTROL_BUTTON_TRASH: \"mapbox-gl-draw_trash\",\n    CONTROL_BUTTON_COMBINE_FEATURES: \"mapbox-gl-draw_combine\",\n    CONTROL_BUTTON_UNCOMBINE_FEATURES: \"mapbox-gl-draw_uncombine\",\n    CONTROL_GROUP: \"mapboxgl-ctrl-group\",\n    ATTRIBUTION: \"mapboxgl-ctrl-attrib\",\n    ACTIVE_BUTTON: \"active\",\n    BOX_SELECT: \"mapbox-gl-draw_boxselect\",\n  },\n  sources: {\n    HOT: \"mapbox-gl-draw-hot\",\n    COLD: \"mapbox-gl-draw-cold\",\n  },\n  cursors: {\n    ADD: \"add\",\n    MOVE: \"move\",\n    DRAG: \"drag\",\n    POINTER: \"pointer\",\n    NONE: \"none\",\n  },\n  types: {\n    POLYGON: \"polygon\",\n    LINE: \"line_string\",\n    POINT: \"point\",\n  },\n  geojsonTypes: {\n    FEATURE: \"Feature\",\n    POLYGON: \"Polygon\",\n    LINE_STRING: \"LineString\",\n    POINT: \"Point\",\n    FEATURE_COLLECTION: \"FeatureCollection\",\n    MULTI_PREFIX: \"Multi\",\n    MULTI_POINT: \"MultiPoint\",\n    MULTI_LINE_STRING: \"MultiLineString\",\n    MULTI_POLYGON: \"MultiPolygon\",\n  },\n  modes: {\n    DRAW_LINE_STRING: \"draw_line_string\",\n    DRAW_POLYGON: \"draw_polygon\",\n    DRAW_POINT: \"draw_point\",\n    SIMPLE_SELECT: \"simple_select\",\n    DIRECT_SELECT: \"direct_select\",\n    STATIC: \"static\",\n  },\n  events: {\n    CREATE: \"draw.create\",\n    DELETE: \"draw.delete\",\n    UPDATE: \"draw.update\",\n    SELECTION_CHANGE: \"draw.selectionchange\",\n    MODE_CHANGE: \"draw.modechange\",\n    ACTIONABLE: \"draw.actionable\",\n    RENDER: \"draw.render\",\n    COMBINE_FEATURES: \"draw.combine\",\n    UNCOMBINE_FEATURES: \"draw.uncombine\",\n  },\n  updateActions: {\n    MOVE: \"move\",\n    CHANGE_COORDINATES: \"change_coordinates\",\n  },\n  meta: {\n    FEATURE: \"feature\",\n    MIDPOINT: \"midpoint\",\n    VERTEX: \"vertex\",\n  },\n  activeStates: {\n    ACTIVE: \"true\",\n    INACTIVE: \"false\",\n  },\n  interactions: [\n    \"scrollZoom\",\n    \"boxZoom\",\n    \"dragRotate\",\n    \"dragPan\",\n    \"keyboard\",\n    \"doubleClickZoom\",\n    \"touchZoomRotate\",\n  ],\n  LAT_MIN: -90,\n  LAT_RENDERED_MIN: -85,\n  LAT_MAX: 90,\n  LAT_RENDERED_MAX: 85,\n  LNG_MIN: -270,\n  LNG_MAX: 270,\n};\n","import { Constants } from \"./constants\";\n\nexport const CommonSelectors = {\n  isOfMetaType: function (type) {\n    return function (e) {\n      const featureTarget = e.featureTarget;\n      if (!featureTarget) return false;\n      if (!featureTarget.properties) return false;\n      return featureTarget.properties.meta === type;\n    };\n  },\n  isShiftMousedown: function (e) {\n    if (!e.originalEvent) return false;\n    if (!e.originalEvent.shiftKey) return false;\n    return e.originalEvent.button === 0;\n  },\n  isActiveFeature: function (e) {\n    if (!e.featureTarget) return false;\n    if (!e.featureTarget.properties) return false;\n    return (\n      e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n      e.featureTarget.properties.meta === Constants.meta.FEATURE\n    );\n  },\n  isInactiveFeature: function (e) {\n    if (!e.featureTarget) return false;\n    if (!e.featureTarget.properties) return false;\n    return (\n      e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n      e.featureTarget.properties.meta === Constants.meta.FEATURE\n    );\n  },\n  noTarget: function (e) {\n    return e.featureTarget === undefined;\n  },\n  isFeature: function (e) {\n    if (!e.featureTarget) return false;\n    if (!e.featureTarget.properties) return false;\n    return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n  },\n  isVertex: function (e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === Constants.meta.VERTEX;\n  },\n  isShiftDown: function (e) {\n    if (!e.originalEvent) return false;\n    return e.originalEvent.shiftKey === true;\n  },\n  isEscapeKey: function (e) {\n    return e.keyCode === 27;\n  },\n  isEnterKey: function (e) {\n    return e.keyCode === 13;\n  },\n  true: function () {\n    return true;\n  },\n};\n","export const drawThemes = [\n  {\n    id: \"gl-draw-polygon-fill-inactive\",\n    type: \"fill\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"fill-color\": \"#3bb2d0\",\n      \"fill-outline-color\": \"#3bb2d0\",\n      \"fill-opacity\": 0.1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-fill-active\",\n    type: \"fill\",\n    filter: [\"all\", [\"==\", \"active\", \"true\"], [\"==\", \"$type\", \"Polygon\"]],\n    paint: {\n      \"fill-color\": \"#fbb03b\",\n      \"fill-outline-color\": \"#fbb03b\",\n      \"fill-opacity\": 0.1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-midpoint\",\n    type: \"circle\",\n    filter: [\"all\", [\"==\", \"$type\", \"Point\"], [\"==\", \"meta\", \"midpoint\"]],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-inactive\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#3bb2d0\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-active\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"active\", \"true\"], [\"==\", \"$type\", \"Polygon\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#fbb03b\",\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-inactive\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"LineString\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#3bb2d0\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-active\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"$type\", \"LineString\"], [\"==\", \"active\", \"true\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#fbb03b\",\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-and-line-vertex-stroke-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"vertex\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-and-line-vertex-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"vertex\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-point-point-stroke-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"meta\", \"feature\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-opacity\": 1,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-point-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"meta\", \"feature\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#3bb2d0\",\n    },\n  },\n  {\n    id: \"gl-draw-point-stroke-active\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"active\", \"true\"],\n      [\"!=\", \"meta\", \"midpoint\"],\n    ],\n    paint: {\n      \"circle-radius\": 7,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-point-active\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"meta\", \"midpoint\"],\n      [\"==\", \"active\", \"true\"],\n    ],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-fill-static\",\n    type: \"fill\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Polygon\"]],\n    paint: {\n      \"fill-color\": \"#404040\",\n      \"fill-outline-color\": \"#404040\",\n      \"fill-opacity\": 0.1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-static\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Polygon\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#404040\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-static\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"LineString\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#404040\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-point-static\",\n    type: \"circle\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Point\"]],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-color\": \"#404040\",\n    },\n  },\n];\n","export function getIneractionSwitch(name) {\n  return {\n    enable: function(ctx) {\n      setTimeout(function() {\n        // First check we've got a map and some context.\n        if (\n          !ctx.map ||\n          !ctx.map[name] ||\n          !ctx._ctx ||\n          !ctx._ctx.store ||\n          !ctx._ctx.store.getInitialConfigValue\n        )\n          return;\n        // Now check initial state wasn't false (we leave it disabled if so)\n        if (!ctx._ctx.store.getInitialConfigValue(name)) return;\n        ctx.map[name].enable();\n      }, 0);\n    },\n    disable(ctx) {\n      setTimeout(function() {\n        if (!ctx.map || !ctx.map[name]) return;\n        // Always disable here, as it's necessary in some cases.\n        ctx.map[name].disable();\n      }, 0);\n    },\n  };\n}\n","import { Constants, CommonSelectors, createVertex } from \"./lib\";\n\nimport { getIneractionSwitch } from \"./switchIteractions\";\n\nconst doubleClickZoom = getIneractionSwitch(\"doubleClickZoom\");\nconst dragPan = getIneractionSwitch(\"dragPan\");\n\nconst DrawRectangle = {};\n\nDrawRectangle.onSetup = function ({\n  inspect,\n  onInvalid,\n  callInvalidOnce = false,\n  allowCreateInvalid = false,\n  stopOnEscape = true,\n}) {\n  const rectangle = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]],\n    },\n  });\n  this.addFeature(rectangle);\n\n  this.clearSelectedFeatures();\n\n  // Disable iteractions\n  doubleClickZoom.disable(this);\n  dragPan.disable(this);\n\n  // Update cursor\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({ trash: true });\n\n  // Setup mode options\n  if (inspect) this.inspect = inspect;\n  this.allowCreateInvalid = allowCreateInvalid;\n  this.callInvalidOnce = callInvalidOnce;\n  this.stopOnEscape = stopOnEscape;\n  if (onInvalid) this.onInvalid = onInvalid;\n\n  return {\n    rectangle,\n    dragMoving: false,\n    isRectangleInvalid: false,\n  };\n};\n\nDrawRectangle.onClick = function (state, e) {\n  // on first click, save clicked point coords as starting for rectangle\n  if (!state.startPoint) {\n    const startPoint = [e.lngLat.lng, e.lngLat.lat];\n    state.startPoint = startPoint;\n    this.updateUIClasses({ mouse: Constants.cursors.ADD });\n    state.rectangle.updateCoordinate(`0.0`, e.lngLat.lng, e.lngLat.lat);\n    state.rectangle.updateCoordinate(`0.1`, e.lngLat.lng, e.lngLat.lat);\n  } else if (\n    state.startPoint &&\n    state.startPoint[0] !== e.lngLat.lng &&\n    state.startPoint[1] !== e.lngLat.lat &&\n    state.dragMoving &&\n    (!state.isRectangleInvalid || this.allowCreateInvalid)\n  ) {\n    this.updateUIClasses({ mouse: \"pointer\" });\n    state.endPoint = [e.lngLat.lng, e.lngLat.lat];\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.rectangle.id],\n    });\n  }\n};\n\nDrawRectangle.onMouseUp = DrawRectangle.onClick;\nDrawRectangle.onMouseDown = DrawRectangle.onClick;\nDrawRectangle.onTouchStart = DrawRectangle.onClick;\nDrawRectangle.onTouchEnd = function (state, e) {\n  if (\n    state.startPoint &&\n    state.startPoint[0] !== e.lngLat.lng &&\n    state.startPoint[1] !== e.lngLat.lat\n  ) {\n    DrawRectangle.onMouseMove(state, e);\n    this.updateUIClasses({ mouse: \"pointer\" });\n    state.endPoint = [e.lngLat.lng, e.lngLat.lat];\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.rectangle.id],\n    });\n  } else DrawRectangle.onClick(state, e);\n};\n\nDrawRectangle.onTap = function (state, e) {\n  if (!state.startPoint) this.onClick(state, e);\n};\n\nDrawRectangle.onMouseMove = function (state, e) {\n  state.dragMoving = true;\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n  if (state.startPoint) {\n    state.rectangle.updateCoordinate(\"0.1\", e.lngLat.lng, state.startPoint[1]); // maxX, minY\n    state.rectangle.updateCoordinate(\"0.2\", e.lngLat.lng, e.lngLat.lat); // maxX, maxY\n    state.rectangle.updateCoordinate(\"0.3\", state.startPoint[0], e.lngLat.lat); // minX,maxY\n    state.rectangle.updateCoordinate(\n      \"0.4\",\n      state.startPoint[0],\n      state.startPoint[1]\n    );\n  } else {\n    state.rectangle.updateCoordinate(`0.0`, e.lngLat.lng, e.lngLat.lat);\n  }\n\n  if (this.inspect) {\n    const { valid, ...data } = this.inspect(state.rectangle) || {};\n\n    if (!valid) {\n      if (!state.isRectangleInvalid || !this.callInvalidOnce)\n        if (this.onInvalid) this.onInvalid(data);\n      state.isRectangleInvalid = true;\n      state.rectangle.properties.is_invalid = true;\n    } else {\n      state.isRectangleInvalid = false;\n      state.rectangle.properties.is_invalid = false;\n    }\n  }\n};\nDrawRectangle.onDrag = DrawRectangle.onMouseMove;\nDrawRectangle.onTouchMove = DrawRectangle.onMouseMove;\n\nDrawRectangle.onStop = function (state) {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n\n  // Enable iteractions\n  doubleClickZoom.enable(this);\n  dragPan.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.rectangle.id) === undefined) return;\n\n  //remove last added coordinate\n  state.rectangle.removeCoordinate(\"0.5\");\n  if (state.rectangle.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.rectangle.toGeoJSON()],\n    });\n  } else {\n    this.deleteFeature([state.rectangle.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawRectangle.onKeyUp = function (state, e) {\n  if (CommonSelectors.isEscapeKey(e))\n    if (this.stopOnEscape) {\n      this.deleteFeature([state.rectangle.id], { silent: true });\n      this.changeMode(Constants.modes.SIMPLE_SELECT);\n    } else if (CommonSelectors.isEnterKey(e)) {\n      this.changeMode(Constants.modes.SIMPLE_SELECT, {\n        featureIds: [state.rectangle.id],\n      });\n    }\n};\n\nDrawRectangle.onTrash = function (state) {\n  this.deleteFeature([state.rectangle.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawRectangle.toDisplayFeatures = function (state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.rectangle.id;\n  geojson.properties.active = isActivePolygon\n    ? Constants.activeStates.ACTIVE\n    : Constants.activeStates.INACTIVE;\n  if (!isActivePolygon) return display(geojson);\n\n  if (geojson.geometry.coordinates.length === 0) return;\n  const coordinateCount = geojson.geometry.coordinates[0].length;\n\n  if (coordinateCount < 3) return;\n  display(\n    createVertex(\n      state.rectangle.id,\n      geojson.geometry.coordinates[0][0],\n      \"0.0\",\n      false\n    )\n  );\n  geojson.properties.meta = Constants.meta.FEATURE;\n\n  if (!state.startPoint) return;\n  return display(geojson);\n};\n\nexport default DrawRectangle;\n","import { Constants } from \"./constants\";\n\nexport function createVertex(parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: selected\n        ? Constants.activeStates.ACTIVE\n        : Constants.activeStates.INACTIVE,\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coordinates,\n    },\n  };\n}\n","import { drawThemes } from \"./lib\";\n\nconst ActivePolygonStyles = [\n  {\n    id: \"gl-draw-polygon-fill-active\",\n    type: \"fill\",\n    filter: [\"all\", [\"==\", \"active\", \"true\"], [\"==\", \"$type\", \"Polygon\"]],\n    paint: {\n      \"fill-color\": [\n        \"case\",\n        [\"!\", [\"to-boolean\", [\"get\", \"user_is_invalid\"]]],\n        \"#fbb03b\",\n        \"#ff0000\",\n      ],\n      \"fill-opacity\": 0.2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-active\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"active\", \"true\"], [\"==\", \"$type\", \"Polygon\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": [\n        \"case\",\n        [\"!\", [\"to-boolean\", [\"get\", \"user_is_invalid\"]]],\n        \"#fbb03b\",\n        \"#ff0000\",\n      ],\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n];\n\nfunction overrideDefaultStyles(themes) {\n  return drawThemes\n    .filter((theme) => !themes.map(({ id }) => id).includes(theme.id))\n    .concat(themes);\n}\n\nconst overrided = overrideDefaultStyles(ActivePolygonStyles);\n\nexport { overrided as default, overrideDefaultStyles, ActivePolygonStyles };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(helpers.feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        var previousFeatureIndex = 0;\n        var previousMultiIndex = 0;\n        var prevGeomIndex = 0;\n        if (coordEach(feature, function (currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n                previousCoords = currentCoord;\n                previousFeatureIndex = featureIndex;\n                previousMultiIndex = multiPartIndexCoord;\n                prevGeomIndex = geometryIndex;\n                segmentIndex = 0;\n                return;\n            }\n            var currentSegment = helpers.lineString([previousCoords, currentCoord], feature.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        if (feature.geometry === null) return;\n        var type = feature.geometry.type;\n        var coords = feature.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(helpers.lineString(coords[geometryIndex], feature.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return helpers.lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return helpers.point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return helpers.point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return helpers.point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.coordAll = coordAll;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.findSegment = findSegment;\nexports.findPoint = findPoint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n// Note: change RADIUS => earthRadius\nvar RADIUS = 6378137;\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return meta_1.geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\nexports.default = area;\n/**\n * Calculate Area\n *\n * @private\n * @param {Geometry} geom GeoJSON Geometries\n * @returns {number} area\n */\nfunction calculateArea(geom) {\n    var total = 0;\n    var i;\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonArea(geom.coordinates);\n        case \"MultiPolygon\":\n            for (i = 0; i < geom.coordinates.length; i++) {\n                total += polygonArea(geom.coordinates[i]);\n            }\n            return total;\n        case \"Point\":\n        case \"MultiPoint\":\n        case \"LineString\":\n        case \"MultiLineString\":\n            return 0;\n    }\n    return 0;\n}\nfunction polygonArea(coords) {\n    var total = 0;\n    if (coords && coords.length > 0) {\n        total += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            total -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return total;\n}\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\",\n * JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var total = 0;\n    var coordsLength = coords.length;\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            }\n            else if (i === coordsLength - 1) {\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            }\n            else {\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            total += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n        total = total * RADIUS * RADIUS / 2;\n    }\n    return total;\n}\nfunction rad(num) {\n    return num * Math.PI / 180;\n}\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport DrawRectangle, {\n  DrawStyles,\n} from \"mapbox-gl-draw-rectangle-validation-mode\";\n\nimport area from \"@turf/area\";\n\nconst OSM_STYLE = {\n  version: 8,\n  sources: {\n    osm: {\n      type: \"raster\",\n      tiles: [\n        \"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        \"https://b.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        \"https://c.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      ],\n      tileSize: 256,\n    },\n  },\n  layers: [\n    {\n      id: \"osm\",\n      source: \"osm\",\n      type: \"raster\",\n    },\n  ],\n};\n\nconst map = new mapboxgl.Map({\n  container: \"map\", // container id\n  style: OSM_STYLE,\n  center: [-91.874, 42.76], // starting position\n  zoom: 12, // starting zoom\n});\n\nconst draw = new MapboxDraw({\n  userProperties: true,\n  displayControlsDefault: false,\n  styles: DrawStyles,\n  modes: Object.assign(MapboxDraw.modes, {\n    draw_rectangle: DrawRectangle,\n  }),\n});\nmap.addControl(draw);\n\nconst currenArea = document.getElementById(\"area\");\ncurrenArea.textContent = \"0\";\n\nfunction onAreaChanged(area) {\n  currenArea.textContent = `${(area / 1_000_000).toFixed(2)}`;\n}\n\ndocument.getElementById(\"draw-rectangle\").addEventListener(\"click\", () => {\n  console.log(\"let's draw!\");\n  draw.changeMode(\"draw_rectangle\", {\n    inspect: (rectangle) => {\n      const a = area(rectangle);\n      return { valid: a < 5 * 1_000_000, area: a };\n    },\n    allowCreateInvalid: false, // default false\n    callInvalidOnce: false, // default false - calls exceedCallback on each mouse move\n    onInvalid: ({ area }) => console.log(`area exceeded! ${area}`), // optional\n    stopOnEscape: true, // default true\n  });\n});\n"]}